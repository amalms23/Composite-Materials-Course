# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(1.0, 1.0), 
    point2=(-1.0, -1.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseSolidExtrude(depth=2.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['Part-1'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Part-1'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-1'].edges[1], MIDDLE), point2=
    mdb.models['Model-1'].parts['Part-1'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-1'].edges[2], MIDDLE), point3=
    mdb.models['Model-1'].parts['Part-1'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-1'].edges[3], MIDDLE))
#* Feature creation failed.
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.15, name='__profile__', 
    sheetSize=6.0, transform=
    mdb.models['Model-1'].parts['Part-1'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Part-1'].faces[0], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Part-1'].edges[3], 
    sketchOrientation=RIGHT, origin=(1.0, 0.0, 2.0)))
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-1'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), edges=(mdb.models['Model-1'].parts['Part-1'].edges[0], ), line=
    mdb.models['Model-1'].parts['Part-1'].edges[10], sense=REVERSE)
#* Feature creation failed.
mdb.models['Model-1'].parts['Part-1'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Part-1'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-1'].edges[3], MIDDLE), point2=
    mdb.models['Model-1'].parts['Part-1'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-1'].edges[0], MIDDLE), point3=
    mdb.models['Model-1'].parts['Part-1'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-1'].edges[1], MIDDLE))
#* Feature creation failed.
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.15, name='__profile__', 
    sheetSize=6.0, transform=
    mdb.models['Model-1'].parts['Part-1'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Part-1'].faces[0], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Part-1'].edges[0], 
    sketchOrientation=RIGHT, origin=(1.0, 0.0, 1.0)))
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.15, name='__profile__', 
    sheetSize=6.0, transform=
    mdb.models['Model-1'].parts['Part-1'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Part-1'].faces[0], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Part-1'].edges[2], 
    sketchOrientation=RIGHT, origin=(1.0, 0.0, 1.0)))
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(0.0, 0.79788456))
mdb.models['Model-1'].parts['Part-1'].PartitionCellBySketch(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), sketch=mdb.models['Model-1'].sketches['__profile__'], sketchPlane=
    mdb.models['Model-1'].parts['Part-1'].faces[0], sketchUpEdge=
    mdb.models['Model-1'].parts['Part-1'].edges[2])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'].features['Partition cell-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1'].features['Partition cell-1'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['Part-1'].features['Partition cell-1']
mdb.models['Model-1'].parts['Part-1'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Part-1'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-1'].edges[0], MIDDLE), point2=
    mdb.models['Model-1'].parts['Part-1'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-1'].edges[3], MIDDLE), point3=
    mdb.models['Model-1'].parts['Part-1'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-1'].edges[2], MIDDLE))
#* Feature creation failed.
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.15, name='__profile__', 
    sheetSize=6.0, transform=
    mdb.models['Model-1'].parts['Part-1'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Part-1'].faces[0], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['Part-1'].edges[2], 
    sketchOrientation=RIGHT, origin=(1.0, 0.0, 1.0)))
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(0.0, 0.79788456))
mdb.models['Model-1'].parts['Part-1'].PartitionCellBySketch(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), sketch=mdb.models['Model-1'].sketches['__profile__'], sketchPlane=
    mdb.models['Model-1'].parts['Part-1'].faces[0], sketchUpEdge=
    mdb.models['Model-1'].parts['Part-1'].edges[2])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['Part-1'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), edges=(mdb.models['Model-1'].parts['Part-1'].edges[0], ), line=
    mdb.models['Model-1'].parts['Part-1'].edges[11], sense=REVERSE)
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].StaticStep(name='Loading_step', previous='Initial')
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'E', 'EVOL'))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-1')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='disp1', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-1'], u1=UNSET, u2=0.5, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#10 ]', ), ), name='lowersurf')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='disp2', region=
    mdb.models['Model-1'].rootAssembly.sets['lowersurf'], u1=UNSET, u2=-0.5, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ), size=0.1)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ))
mdb.models['Model-1'].Material(description='MY750/HY917/DY063 epoxy', name=
    'Matrix')
mdb.models['Model-1'].materials['Matrix'].Elastic(table=((3350.0, 0.35), ))
mdb.models['Model-1'].materials['Matrix'].Conductivity(table=((5.8e-05, ), ))
mdb.models['Model-1'].Material(description='E-glass 21xK43 Gevetex ', name=
    'Fibre')
mdb.models['Model-1'].materials['Fibre'].Elastic(table=((80000000.0, 
    80000000.0, 80000000.0, 0.2, 0.2, 0.2, 33330000.0, 33330000.0, 33330000.0), 
    ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-1'].materials['Fibre'].Conductivity(table=((4.9e-06, 4.9e-06, 
    4.9e-06), ), type=ORTHOTROPIC)
mdb.models['Model-1'].HomogeneousSolidSection(material='Matrix', name='Matrix', 
    thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='Fibre', name='Fibre', 
    thickness=None)
mdb.models['Model-1'].parts['Part-1'].Set(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), name='Matrix')
mdb.models['Model-1'].parts['Part-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-1'].sets['Matrix'], sectionName='Matrix', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Part-1'].Set(cells=
    mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), name='Fibre')
mdb.models['Model-1'].parts['Part-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-1'].sets['Fibre'], sectionName='Fibre', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Part-1'].MaterialOrientation(
    additionalRotationType=ROTATION_NONE, axis=AXIS_1, fieldName='', localCsys=
    None, orientationType=GLOBAL, region=Region(
    cells=mdb.models['Model-1'].parts['Part-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='YY_displacement', nodalOutputPrecision=
    SINGLE, numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', 
    type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['YY_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\YY_displacement.odb', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 31312, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['YY_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'YY_displacement', 'memory': 268.0})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['YY_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(JOB_COMPLETED, {
    'time': 'Thu Apr 13 04:00:06 2023', 'jobName': 'YY_displacement'})
# Save by user on 2023_04_13-04.21.40; build 6.14-5 2015_08_18-20.07.49 135153
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].materials['Matrix'].elastic.setValues(table=((3350000.0, 
    0.35), ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    ('[#3 ]', ), ))
mdb.models['Model-1'].rootAssembly.setMeshControls(algorithm=MEDIAL_AXIS, 
    regions=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    ('[#3 ]', ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ))
mdb.models['Model-1'].rootAssembly.sets.changeKey(fromName='Set-1', toName=
    'yyplus')
mdb.models['Model-1'].rootAssembly.sets.changeKey(fromName='lowersurf', toName=
    'yyminus')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#c ]', ), ), name='xxplus')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#22 ]', ), ), name='xxminus')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#80 ]', ), ), name='zzplus')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#100 ]', ), ), name='zzminus')
del mdb.models['Model-1'].boundaryConditions['disp1']
del mdb.models['Model-1'].boundaryConditions['disp2']
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='displ_yy', region=
    mdb.models['Model-1'].rootAssembly.sets['yyplus'], u1=UNSET, u2=1.0, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='dipl_yy', region=
    mdb.models['Model-1'].rootAssembly.sets['yyminus'], u1=UNSET, u2=-1.0, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='dipl_yy', toName=
    'displ_yy-')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_yy', toName=
    'displ_yy+')
mdb.jobs['YY_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\YY_displacement.odb', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 14852, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'equilibrium': 0})
mdb.jobs['YY_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'equilibrium': 1})
mdb.jobs['YY_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(JOB_COMPLETED, {
    'jobName': 'YY_displacement', 'time': 'Sat Apr 15 17:51:31 2023'})
mdb.jobs['YY_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\YY_displacement.odb', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 16044, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'equilibrium': 0})
mdb.jobs['YY_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'equilibrium': 1})
mdb.jobs['YY_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(JOB_COMPLETED, {
    'jobName': 'YY_displacement', 'time': 'Sun Apr 16 02:04:42 2023'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_yy+', 
    toName='displ_xx+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_yy-', 
    toName='displ_xx-')
mdb.models['Model-1'].boundaryConditions['displ_xx+'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['xxplus'], u1=1.0, u2=UNSET)
mdb.models['Model-1'].boundaryConditions['displ_xx-'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['xxminus'], u1=-1.0, u2=UNSET)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='XX_displacement', nodalOutputPrecision=
    SINGLE, numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', 
    type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['XX_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\XX_displacement.odb', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 9984, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'equilibrium': 0})
mdb.jobs['XX_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'equilibrium': 1})
mdb.jobs['XX_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(JOB_COMPLETED, {
    'jobName': 'XX_displacement', 'time': 'Sun Apr 16 02:48:59 2023'})
mdb.models['Model-1'].boundaryConditions['displ_xx-'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['zzminus'], u1=UNSET, u3=-1.0)
mdb.models['Model-1'].boundaryConditions['displ_xx+'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['zzplus'], u1=UNSET, u3=1.0)
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_xx+', 
    toName='displ_zz+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_xx-', 
    toName='displ_zz-')
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='ZZ_displacement', nodalOutputPrecision=
    SINGLE, numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', 
    type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['ZZ_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['ZZ_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\ZZ_displacement.odb', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 3448, 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'ZZ_displacement', 'severe': 0, 'equilibrium': 0})
mdb.jobs['ZZ_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'ZZ_displacement', 'severe': 0, 'equilibrium': 1})
mdb.jobs['ZZ_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(JOB_COMPLETED, {
    'jobName': 'ZZ_displacement', 'time': 'Sun Apr 16 03:23:55 2023'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_zz+', 
    toName='shear_23+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_zz-', 
    toName='shear_23-')
mdb.models['Model-1'].boundaryConditions['shear_23+'].setValues(u2=0.2, u3=
    UNSET)
mdb.models['Model-1'].boundaryConditions['shear_23-'].setValues(u1=0.0, u2=0.0, 
    u3=0.0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='23_shear', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 17700, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {'jobName': '23_shear', 
    'time': 'Sun Apr 16 09:10:59 2023'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='shear_23+', 
    toName='shear_12+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='shear_23-', 
    toName='shear_12-')
mdb.models['Model-1'].boundaryConditions['shear_12+'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['yyplus'], u1=0.2, u2=0.0, u3=0.0)
mdb.models['Model-1'].boundaryConditions['shear_12-'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['yyminus'])
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='12_shear', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
mdb.jobs['12_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\12_shear.odb', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 10124, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '12_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['12_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '12_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['12_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(JOB_COMPLETED, {'jobName': '12_shear', 
    'time': 'Sun Apr 16 09:22:43 2023'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='shear_12+', 
    toName='shear_13+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='shear_12-', 
    toName='shear_13-')
mdb.models['Model-1'].boundaryConditions['shear_13-'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['zzminus'])
mdb.models['Model-1'].boundaryConditions['shear_13+'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['zzplus'])
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='13_shear', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['13_shear'].submit(consistencyChecking=OFF)
mdb.jobs['13_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\13_shear.odb', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 8176, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '13_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['13_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '13_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['13_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(JOB_COMPLETED, {'jobName': '13_shear', 
    'time': 'Sun Apr 16 11:10:32 2023'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='shear_13+', 
    toName='displ_11+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='shear_13-', 
    toName='displ_11-')
mdb.models['Model-1'].boundaryConditions['displ_11-'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['xxminus'], u1=-0.01, u2=UNSET, u3=
    UNSET)
mdb.models['Model-1'].boundaryConditions['displ_11+'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['xxplus'], u1=0.01)
mdb.jobs['XX_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\XX_displacement.odb', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 17592, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'equilibrium': 0})
mdb.jobs['XX_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'equilibrium': 1})
mdb.jobs['XX_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(JOB_COMPLETED, {
    'jobName': 'XX_displacement', 'time': 'Mon Apr 17 04:23:24 2023'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    1.2162036895752, 0.196242690086365), value=2.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'].features['Partition cell-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1'].features['Partition cell-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'].features['Partition cell-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1'].features['Partition cell-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['XX_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\XX_displacement.odb', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 5708, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'equilibrium': 0})
mdb.jobs['XX_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'equilibrium': 1})
mdb.jobs['XX_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(JOB_COMPLETED, {
    'jobName': 'XX_displacement', 'time': 'Mon Apr 17 07:02:19 2023'})
mdb.models['Model-1'].boundaryConditions['displ_11+'].setValues(u2=UNSET, u3=
    UNSET)
mdb.jobs['XX_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\XX_displacement.odb', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 13992, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'equilibrium': 0})
mdb.jobs['XX_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'equilibrium': 1})
mdb.jobs['XX_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(JOB_COMPLETED, {
    'jobName': 'XX_displacement', 'time': 'Mon Apr 17 21:14:20 2023'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-2')
del mdb.models['Model-2']
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_11+', 
    toName='displ_22+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_11-', 
    toName='displ_22-')
mdb.models['Model-1'].boundaryConditions['displ_22-'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['yyminus'], u1=UNSET, u2=-0.01)
mdb.models['Model-1'].boundaryConditions['displ_22+'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['yyplus'], u1=UNSET, u2=0.01)
mdb.jobs['YY_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\YY_displacement.odb', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 18820, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'equilibrium': 0})
mdb.jobs['YY_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'equilibrium': 1})
mdb.jobs['YY_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(JOB_COMPLETED, {
    'jobName': 'YY_displacement', 'time': 'Mon Apr 17 21:53:13 2023'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_22+', 
    toName='displ_33+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_22-', 
    toName='displ_33-')
mdb.models['Model-1'].boundaryConditions['displ_33+'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['zzplus'], u2=UNSET, u3=0.01)
mdb.models['Model-1'].boundaryConditions['displ_33-'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['zzminus'], u2=UNSET, u3=-0.01)
mdb.jobs['ZZ_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['ZZ_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\ZZ_displacement.odb', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 11008, 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'ZZ_displacement', 'severe': 0, 'equilibrium': 0})
mdb.jobs['ZZ_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'ZZ_displacement', 'severe': 0, 'equilibrium': 1})
mdb.jobs['ZZ_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(JOB_COMPLETED, {
    'jobName': 'ZZ_displacement', 'time': 'Mon Apr 17 22:00:55 2023'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_33+', 
    toName='displ_12+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_33-', 
    toName='displ_12-')
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['yyminus'], u1=0.0, u2=0.0, u3=0.0)
mdb.models['Model-1'].ExpressionField(description='', expression=' 0.01*X -1', 
    localCsys=None, name='AnalyticalField-1')
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(
    distributionType=FIELD, fieldName='AnalyticalField-1')
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['xxplus'], u1=1.0, u3=UNSET)
mdb.models['Model-1'].analyticalFields['AnalyticalField-1'].setValues(
    expression=' 0.01*Y -1')
mdb.models['Model-1'].analyticalFields['AnalyticalField-1'].setValues(
    expression='0.05*Y -0.5')
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(u1=-1.0)
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(u2=UNSET, u3=
    UNSET)
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(u1=1.0)
mdb.models['Model-1'].analyticalFields['AnalyticalField-1'].setValues(
    expression='( Y +1)/1.1')
mdb.models['Model-1'].analyticalFields.changeKey(fromName='AnalyticalField-1', 
    toName='shear_12')
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(fieldName=
    'shear_12')
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(
    distributionType=FIELD, fieldName='shear_12', region=
    mdb.models['Model-1'].rootAssembly.sets['xxminus'], u1=-1.0)
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
mdb.jobs['12_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\12_shear.odb', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 19164, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '12_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['12_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '12_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['12_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(JOB_COMPLETED, {'jobName': '12_shear', 
    'time': 'Mon Apr 17 23:15:00 2023'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_12+', 
    toName='displ_13+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_12-', 
    toName='displ_13-')
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(expression=
    '( Z+1)/1.1')
mdb.jobs['13_shear'].submit(consistencyChecking=OFF)
mdb.jobs['13_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\13_shear.odb', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 13920, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '13_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['13_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '13_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['13_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(JOB_COMPLETED, {'jobName': '13_shear', 
    'time': 'Mon Apr 17 23:27:35 2023'})
mdb.models['Model-1'].boundaryConditions['displ_13+'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['yyplus'])
mdb.models['Model-1'].boundaryConditions['displ_13-'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['yyminus'])
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_13+', 
    toName='displ_23+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_13-', 
    toName='displ_23-')
mdb.models['Model-1'].boundaryConditions['displ_23+'].setValues(u1=UNSET, u2=
    1.0)
mdb.models['Model-1'].boundaryConditions['displ_23-'].setValues(u1=UNSET, u2=
    -1.0)
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 15840, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {'jobName': '23_shear', 
    'time': 'Mon Apr 17 23:46:34 2023'})
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-3', region=
    mdb.models['Model-1'].rootAssembly.sets['zzminus'], u1=0.0, u2=0.0, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='BC-3', toName=
    'fix')
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '42 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': '23_shear'})
del mdb.models['Model-1'].boundaryConditions['fix']
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 5396, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {'jobName': '23_shear', 
    'time': 'Mon Apr 17 23:56:59 2023'})
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(expression=
    '0.1*Z')
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(expression=
    '0.1*(Z-1)')
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 18112, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {'jobName': '23_shear', 
    'time': 'Tue Apr 18 00:13:56 2023'})
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 3092, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {'jobName': '23_shear', 
    'time': 'Wed Apr 19 23:37:07 2023'})
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(expression=
    '0.1*(Y-1)')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_23+', 
    toName='displ_12+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_23-', 
    toName='displ_12-')
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(u1=1.0, u2=
    UNSET)
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(u1=1.0, u2=
    UNSET)
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(u1=-1.0)
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(u1=1.0)
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(expression=
    '0.1*(Y)')
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
mdb.jobs['12_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\12_shear.odb', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 8500, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '12_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['12_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'There is zero FORCE everywhere in the model based on the default criterion. please check the value of the average FORCE during the current iteration to verify that the FORCE is small enough to be treated as zero. if not, please use the solution controls to reset the criterion for zero FORCE.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '12_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['12_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(JOB_COMPLETED, {'jobName': '12_shear', 
    'time': 'Thu Apr 20 00:22:52 2023'})
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='Fix1', region=
    mdb.models['Model-1'].rootAssembly.sets['zzminus'], u1=UNSET, u2=UNSET, u3=
    0.0, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='Fix2', region=
    mdb.models['Model-1'].rootAssembly.sets['zzplus'], u1=UNSET, u2=UNSET, u3=
    0.0, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='Fix', region=
    mdb.models['Model-1'].rootAssembly.sets['yyplus'], u1=UNSET, u2=0.0, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='Fix4', region=
    mdb.models['Model-1'].rootAssembly.sets['yyminus'], u1=UNSET, u2=0.0, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(expression=
    '0.1*(Y+1)/2')
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['xxplus'])
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['xxminus'])
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
mdb.jobs['12_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\12_shear.odb', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 25416, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '12_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['12_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '12_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['12_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(JOB_COMPLETED, {'jobName': '12_shear', 
    'time': 'Thu Apr 20 20:55:23 2023'})
mdb.models['Model-1'].materials['Matrix'].elastic.setValues(table=((3350.0, 
    0.35), ))
mdb.models['Model-1'].materials['Fibre'].elastic.setValues(table=((80000.0, 
    80000.0, 80000.0, 0.2, 0.2, 0.2, 33330.0, 33330.0, 33330.0), ))
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(expression=
    '0.01*(Y+1)/2')
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
mdb.jobs['12_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\12_shear.odb', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 25964, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '12_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['12_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '12_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['12_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(JOB_COMPLETED, {'jobName': '12_shear', 
    'time': 'Thu Apr 20 21:33:40 2023'})
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(expression=
    '0.01*( Z +1)/2')
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(expression=
    '0.01*( Y +1)/2')
mdb.models['Model-1'].analyticalFields.changeKey(fromName='shear_12', toName=
    'shear_23')
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(fieldName=
    'shear_23', region=mdb.models['Model-1'].rootAssembly.sets['zzplus'], u1=
    UNSET, u3=1.0)
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(
    distributionType=UNIFORM, region=
    mdb.models['Model-1'].rootAssembly.sets['zzminus'], u1=UNSET, u3=1.0)
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(
    distributionType=FIELD, fieldName='shear_23')
mdb.models['Model-1'].boundaryConditions['Fix1'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['yyplus'], u2=0.0, u3=UNSET)
mdb.models['Model-1'].boundaryConditions['Fix2'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['yyminus'], u2=0.0, u3=UNSET)
mdb.models['Model-1'].boundaryConditions['Fix'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['xxplus'], u1=0.0, u2=UNSET)
mdb.models['Model-1'].boundaryConditions['Fix4'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['xxminus'], u1=0.0, u2=UNSET)
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 24144, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {'jobName': '23_shear', 
    'time': 'Thu Apr 20 21:49:58 2023'})
mdb.models['Model-1'].boundaryConditions['Fix'].setValues(u1=UNSET, u2=0.0, u3=
    0.0)
del mdb.models['Model-1'].boundaryConditions['Fix']
del mdb.models['Model-1'].boundaryConditions['Fix1']
del mdb.models['Model-1'].boundaryConditions['Fix2']
del mdb.models['Model-1'].boundaryConditions['Fix4']
del mdb.models['Model-1'].boundaryConditions['displ_12+']
del mdb.models['Model-1'].boundaryConditions['displ_12-']
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#c ]', ), ), name='Set-8')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-1', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-8'], u1=0.01, u2=UNSET, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#22 ]', ), ), name='Set-9')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-2', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-9'], u1=-1.0, u2=UNSET, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(u1=-0.01)
mdb.jobs['XX_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\Project\\XX_displacement.odb', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 6876, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['XX_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'XX_displacement', 'memory': 244.0})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['XX_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 23 07:23:52 2023', 'jobName': 'XX_displacement'})
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#1d0 ]', ), ), name='Set-10')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-3', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-10'], u1=UNSET, u2=0.0, u3=0.0
    , ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.jobs['XX_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\Project\\XX_displacement.odb', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 7840, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['XX_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'XX_displacement', 'memory': 244.0})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['XX_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 23 07:26:18 2023', 'jobName': 'XX_displacement'})
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['yyplus'], u1=UNSET, u2=0.01)
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['yyminus'], u1=UNSET, u2=0.01)
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(u2=-0.01)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#1ae ]', ), ), name='Set-11')
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-11'], u1=0.0, u2=UNSET)
mdb.jobs['YY_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\Project\\YY_displacement.odb', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 10704, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['YY_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'YY_displacement', 'memory': 244.0})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['YY_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 23 07:33:22 2023', 'jobName': 'YY_displacement'})
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['zzplus'], u2=UNSET, u3=0.01)
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['zzminus'], u2=UNSET, u3=-0.01)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#7e ]', ), ), name='Set-12')
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-12'], u2=0.0, u3=UNSET)
mdb.jobs['ZZ_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['ZZ_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\Project\\ZZ_displacement.odb', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 8552, 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'ZZ_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['ZZ_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'ZZ_displacement', 'memory': 244.0})
mdb.jobs['ZZ_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'ZZ_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['ZZ_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 23 07:37:15 2023', 'jobName': 'ZZ_displacement'})
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(distributionType=
    FIELD, fieldName='shear_23', u1=1.0, u2=0.0, u3=0.0)
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(distributionType=
    FIELD, fieldName='shear_23', u1=1.0, u2=0.0, u3=0.0)
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    ('[#3 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#1f1 ]', ), ), name='Set-13')
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-13'], u1=UNSET, u3=0.0)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['xxplus'])
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['xxminus'])
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
mdb.jobs['12_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\Project\\12_shear.odb', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 11776, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['12_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '12_shear', 'memory': 244.0})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['12_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 23 07:46:45 2023', 'jobName': '12_shear'})
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u1=0.0, u3=1.0)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['zzplus'])
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['zzminus'], u1=0.0, u3=1.0)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#7e ]', ), ), name='Set-14')
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-14'], u1=0.0, u3=UNSET)
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\Project\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 12840, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '23_shear', 'memory': 244.0})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 23 07:54:12 2023', 'jobName': '23_shear'})
mdb.models['Model-1'].analyticalFields['shear_23'].setValues(expression=
    '0.01*(X+1)/2')
mdb.models['Model-1'].analyticalFields['shear_23'].setValues(expression=
    '0.01*(Z+1)/2')
del mdb.models['Model-1'].boundaryConditions['BC-1']
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-3']
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#180 ]', ), ), name='Set-15')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-1', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-15'], u1=1.0, u2=UNSET, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(distributionType=
    FIELD, fieldName='shear_23')
mdb.models['Model-1'].analyticalFields['shear_23'].setValues(expression=
    '0.01*(X+1)/2')
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u1=UNSET, u3=1.0)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u2=1.0, u3=UNSET)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#50 ]', ), ), name='Set-16')
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-16'])
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u1=0.0, u3=0.0)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#1ae ]', ), ), name='Set-17')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-2', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-17'], u1=0.0, u2=UNSET, u3=0.0
    , ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
mdb.jobs['12_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\Project\\12_shear.odb', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 10160, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['12_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '12_shear', 'memory': 244.0})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['12_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 23 08:49:32 2023', 'jobName': '12_shear'})
del mdb.models['Model-1'].boundaryConditions['BC-2']
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u2=0.0, u3=1.0)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#180 ]', ), ), name='Set-18')
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-18'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#7e ]', ), ), name='Set-19')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-2', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-19'], u1=0.0, u2=0.0, u3=UNSET
    , ur1=UNSET, ur2=UNSET, ur3=UNSET)
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-1']
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#180 ]', ), ), name='Set-20')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-1', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-20'], u1=0.0, u2=0.0, u3=1.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(distributionType=
    FIELD, fieldName='shear_23')
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u2=1.0, u3=0.0)
del mdb.models['Model-1'].boundaryConditions['BC-1']
mdb.models['Model-1'].analyticalFields['shear_23'].setValues(expression=
    '0.01*(Y+1)/2')
mdb.models['Model-1'].analyticalFields.changeKey(fromName='shear_23', toName=
    'shear_12')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#2e ]', ), ), name='Set-21')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=FIELD, fieldName='shear_12', fixed=OFF, 
    localCsys=None, name='BC-1', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-21'], u1=1.0, u2=0.0, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#1d0 ]', ), ), name='Set-22')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-2', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-22'], u1=UNSET, u2=0.0, u3=0.0
    , ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
mdb.jobs['12_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\Project\\12_shear.odb', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 4324, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['12_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '12_shear', 'memory': 244.0})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['12_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 23 09:07:55 2023', 'jobName': '12_shear'})
del mdb.models['Model-1'].boundaryConditions['BC-1']
del mdb.models['Model-1'].boundaryConditions['BC-2']
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(expression=
    '0.01*(Z)/2')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#50 ]', ), ), name='Set-23')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=FIELD, fieldName='shear_12', fixed=OFF, 
    localCsys=None, name='BC-1', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-23'], u1=1.0, u2=0.0, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#2e ]', ), ), name='Set-24')
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-24'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#1d0 ]', ), ), name='Set-25')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-2', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-25'], u1=UNSET, u2=0.0, u3=0.0
    , ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.jobs['13_shear'].submit(consistencyChecking=OFF)
mdb.jobs['13_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\Project\\13_shear.odb', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 15636, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '13_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['13_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '13_shear', 'memory': 244.0})
mdb.jobs['13_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '13_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['13_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 23 09:19:09 2023', 'jobName': '13_shear'})
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-1']
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#50 ]', ), ), name='Set-26')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-1', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-26'], u1=0.0, u2=1.0, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(distributionType=
    FIELD, fieldName='shear_12')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#1ae ]', ), ), name='Set-27')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-2', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-27'], u1=0.0, u2=UNSET, u3=0.0
    , ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\Project\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 2956, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '23_shear', 'memory': 244.0})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 23 09:24:48 2023', 'jobName': '23_shear'})
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-1']
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-1', region=
    mdb.models['Model-1'].rootAssembly.sets['zzminus'], u1=UNSET, u2=UNSET, u3=
    -1.0, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-2', region=
    mdb.models['Model-1'].rootAssembly.sets['zzplus'], u1=UNSET, u2=UNSET, u3=
    1.0, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(u3=0.01)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u3=-0.01)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u1=0.0, u2=0.0)
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(u1=0.0, u2=0.0)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#7e ]', ), ), name='Set-28')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-3', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-28'], u1=0.0, u2=0.0, u3=UNSET
    , ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.jobs['ZZ_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['ZZ_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\Project\\ZZ_displacement.odb', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 11840, 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'ZZ_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['ZZ_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'ZZ_displacement', 'memory': 244.0})
mdb.jobs['ZZ_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'ZZ_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['ZZ_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 23 09:58:42 2023', 'jobName': 'ZZ_displacement'})
del mdb.models['Model-1'].boundaryConditions['BC-3']
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-1']
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#50 ]', ), ), name='Set-29')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=FIELD, fieldName='shear_12', fixed=OFF, 
    localCsys=None, name='BC-1', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-29'], u1=0.0, u2=1.0, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#1ae ]', ), ), name='Set-30')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Loading_step', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='BC-2', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-30'], u1=0.0, u2=UNSET, u3=0.0
    , ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\Project\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 2448, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '23_shear', 'memory': 244.0})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 23 10:52:05 2023', 'jobName': '23_shear'})
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u1=UNSET, u3=UNSET)
# Save by user on 2023_04_23-11.02.52; build 6.14-5 2015_08_18-20.07.49 135153
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'E:\\Project\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 5404, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'increment': 0, 
    'attempts': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 0.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 244.0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.0, 'stepTime': 1.0, 'step': 1, 'jobName': '23_shear', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {'jobName': '23_shear', 
    'time': 'Sun Apr 23 11:03:16 2023'})
# Save by user on 2023_04_25-02.48.41; build 6.14-5 2015_08_18-20.07.49 135153
