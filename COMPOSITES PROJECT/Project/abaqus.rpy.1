# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 6.14-5 replay file
# Internal Version: 2015_08_18-20.07.49 135153
# Run by user on Sun Apr 23 07:16:18 2023
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
#: Abaqus Error: 
#: This error may have occurred due to a change to the Abaqus Scripting
#: Interface. Please see the Abaqus Scripting Manual for the details of
#: these changes. Also see the "Example environment files" section of 
#: the Abaqus Site Guide for up-to-date examples of common tasks in the
#: environment file.
#: Execution of "onCaeGraphicsStartup()" in the site directory failed.
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=198.190338134766, 
    height=127.565101623535)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
openMdb('RVE.cae')
#: The model database "E:\Project\RVE.cae" has been opened.
session.viewports['Viewport: 1'].setValues(displayedObject=None)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['Model-1'].parts['Part-1']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
#--- Recover file: 'RVE.rec' ---
# -*- coding: mbcs -*- 
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].materials['Matrix'].elastic.setValues(table=((3350000.0, 
    0.35), ))
mdb.models['Model-1'].rootAssembly.deleteMesh(
    regions=mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    ('[#3 ]', ), ))
mdb.models['Model-1'].rootAssembly.setMeshControls(algorithm=MEDIAL_AXIS, 
    regions=mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].cells.getSequenceFromMask(
    ('[#3 ]', ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ))
mdb.models['Model-1'].rootAssembly.sets.changeKey(fromName='Set-1', 
    toName='yyplus')
mdb.models['Model-1'].rootAssembly.sets.changeKey(fromName='lowersurf', 
    toName='yyminus')
mdb.models['Model-1'].rootAssembly.Set(
    faces=mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#c ]', ), ), name='xxplus')
mdb.models['Model-1'].rootAssembly.Set(
    faces=mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#22 ]', ), ), name='xxminus')
mdb.models['Model-1'].rootAssembly.Set(
    faces=mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#80 ]', ), ), name='zzplus')
mdb.models['Model-1'].rootAssembly.Set(
    faces=mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].faces.getSequenceFromMask(
    ('[#100 ]', ), ), name='zzminus')
del mdb.models['Model-1'].boundaryConditions['disp1']
del mdb.models['Model-1'].boundaryConditions['disp2']
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, 
    createStepName='Loading_step', distributionType=UNIFORM, fieldName='', 
    fixed=OFF, localCsys=None, name='displ_yy', 
    region=mdb.models['Model-1'].rootAssembly.sets['yyplus'], u1=UNSET, u2=1.0, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, 
    createStepName='Loading_step', distributionType=UNIFORM, fieldName='', 
    fixed=OFF, localCsys=None, name='dipl_yy', 
    region=mdb.models['Model-1'].rootAssembly.sets['yyminus'], u1=UNSET, 
    u2=-1.0, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='dipl_yy', 
    toName='displ_yy-')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_yy', 
    toName='displ_yy+')
mdb.jobs['YY_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\YY_displacement.odb', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 14852, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['YY_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'YY_displacement', 'memory': 244.0})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['YY_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(JOB_COMPLETED, {
    'time': 'Sat Apr 15 17:51:31 2023', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\YY_displacement.odb', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 16044, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['YY_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'YY_displacement', 'memory': 244.0})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['YY_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 16 02:04:42 2023', 'jobName': 'YY_displacement'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_yy+', 
    toName='displ_xx+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_yy-', 
    toName='displ_xx-')
mdb.models['Model-1'].boundaryConditions['displ_xx+'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['xxplus'], u1=1.0, u2=UNSET)
mdb.models['Model-1'].boundaryConditions['displ_xx-'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['xxminus'], u1=-1.0, 
    u2=UNSET)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='XX_displacement', 
    nodalOutputPrecision=SINGLE, numCpus=1, numGPUs=0, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', 
    waitHours=0, waitMinutes=0)
mdb.jobs['XX_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\XX_displacement.odb', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 9984, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['XX_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'XX_displacement', 'memory': 244.0})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['XX_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 16 02:48:59 2023', 'jobName': 'XX_displacement'})
mdb.models['Model-1'].boundaryConditions['displ_xx-'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['zzminus'], u1=UNSET, 
    u3=-1.0)
mdb.models['Model-1'].boundaryConditions['displ_xx+'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['zzplus'], u1=UNSET, u3=1.0)
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_xx+', 
    toName='displ_zz+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_xx-', 
    toName='displ_zz-')
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='ZZ_displacement', 
    nodalOutputPrecision=SINGLE, numCpus=1, numGPUs=0, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', 
    waitHours=0, waitMinutes=0)
mdb.jobs['ZZ_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['ZZ_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\ZZ_displacement.odb', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 3448, 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'ZZ_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['ZZ_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'ZZ_displacement', 'memory': 244.0})
mdb.jobs['ZZ_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'ZZ_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['ZZ_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 16 03:23:55 2023', 'jobName': 'ZZ_displacement'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_zz+', 
    toName='shear_23+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_zz-', 
    toName='shear_23-')
mdb.models['Model-1'].boundaryConditions['shear_23+'].setValues(u2=0.2, 
    u3=UNSET)
mdb.models['Model-1'].boundaryConditions['shear_23-'].setValues(u1=0.0, u2=0.0, 
    u3=0.0)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='23_shear', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', 
    type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 17700, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '23_shear', 'memory': 244.0})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 16 09:10:59 2023', 'jobName': '23_shear'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='shear_23+', 
    toName='shear_12+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='shear_23-', 
    toName='shear_12-')
mdb.models['Model-1'].boundaryConditions['shear_12+'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['yyplus'], u1=0.2, u2=0.0, 
    u3=0.0)
mdb.models['Model-1'].boundaryConditions['shear_12-'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['yyminus'])
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='12_shear', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', 
    type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
mdb.jobs['12_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\12_shear.odb', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 10124, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['12_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '12_shear', 'memory': 244.0})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['12_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 16 09:22:43 2023', 'jobName': '12_shear'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='shear_12+', 
    toName='shear_13+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='shear_12-', 
    toName='shear_13-')
mdb.models['Model-1'].boundaryConditions['shear_13-'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['zzminus'])
mdb.models['Model-1'].boundaryConditions['shear_13+'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['zzplus'])
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='13_shear', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', 
    type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['13_shear'].submit(consistencyChecking=OFF)
mdb.jobs['13_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\13_shear.odb', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 8176, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '13_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['13_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '13_shear', 'memory': 244.0})
mdb.jobs['13_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '13_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['13_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(JOB_COMPLETED, {
    'time': 'Sun Apr 16 11:10:32 2023', 'jobName': '13_shear'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='shear_13+', 
    toName='displ_11+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='shear_13-', 
    toName='displ_11-')
mdb.models['Model-1'].boundaryConditions['displ_11-'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['xxminus'], u1=-0.01, 
    u2=UNSET, u3=UNSET)
mdb.models['Model-1'].boundaryConditions['displ_11+'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['xxplus'], u1=0.01)
mdb.jobs['XX_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\XX_displacement.odb', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 17592, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['XX_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'XX_displacement', 'memory': 244.0})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['XX_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(JOB_COMPLETED, {
    'time': 'Mon Apr 17 04:23:24 2023', 'jobName': 'XX_displacement'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', 
    objectToCopy=mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', 
    objectToCopy=mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    1.2162036895752, 0.196242690086365), value=2.0, 
    vertex1=mdb.models['Model-1'].sketches['__edit__'].vertices[0], 
    vertex2=mdb.models['Model-1'].sketches['__edit__'].vertices[1])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', 
    objectToCopy=mdb.models['Model-1'].parts['Part-1'].features['Partition cell-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['Part-1'].features['Partition cell-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', 
    objectToCopy=mdb.models['Model-1'].parts['Part-1'].features['Partition cell-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['Part-1'].features['Partition cell-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['XX_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\XX_displacement.odb', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 5708, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['XX_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'XX_displacement', 'memory': 244.0})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['XX_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(JOB_COMPLETED, {
    'time': 'Mon Apr 17 07:02:19 2023', 'jobName': 'XX_displacement'})
mdb.models['Model-1'].boundaryConditions['displ_11+'].setValues(u2=UNSET, 
    u3=UNSET)
mdb.jobs['XX_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\XX_displacement.odb', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 13992, 
    'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['XX_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'XX_displacement', 'memory': 244.0})
mdb.jobs['XX_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'XX_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['XX_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'XX_displacement'})
mdb.jobs['XX_displacement']._Message(JOB_COMPLETED, {
    'time': 'Mon Apr 17 21:14:20 2023', 'jobName': 'XX_displacement'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-2')
#: The model "Model-2" has been created.
del mdb.models['Model-2']
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_11+', 
    toName='displ_22+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_11-', 
    toName='displ_22-')
mdb.models['Model-1'].boundaryConditions['displ_22-'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['yyminus'], u1=UNSET, 
    u2=-0.01)
mdb.models['Model-1'].boundaryConditions['displ_22+'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['yyplus'], u1=UNSET, 
    u2=0.01)
mdb.jobs['YY_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\YY_displacement.odb', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 18820, 
    'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['YY_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'YY_displacement', 'memory': 244.0})
mdb.jobs['YY_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'YY_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['YY_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'YY_displacement'})
mdb.jobs['YY_displacement']._Message(JOB_COMPLETED, {
    'time': 'Mon Apr 17 21:53:13 2023', 'jobName': 'YY_displacement'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_22+', 
    toName='displ_33+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_22-', 
    toName='displ_33-')
mdb.models['Model-1'].boundaryConditions['displ_33+'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['zzplus'], u2=UNSET, 
    u3=0.01)
mdb.models['Model-1'].boundaryConditions['displ_33-'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['zzminus'], u2=UNSET, 
    u3=-0.01)
mdb.jobs['ZZ_displacement'].submit(consistencyChecking=OFF)
mdb.jobs['ZZ_displacement']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\ZZ_displacement.odb', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 11008, 
    'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'ZZ_displacement', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['ZZ_displacement']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'ZZ_displacement', 'memory': 244.0})
mdb.jobs['ZZ_displacement']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'ZZ_displacement', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['ZZ_displacement']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'ZZ_displacement'})
mdb.jobs['ZZ_displacement']._Message(JOB_COMPLETED, {
    'time': 'Mon Apr 17 22:00:55 2023', 'jobName': 'ZZ_displacement'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_33+', 
    toName='displ_12+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_33-', 
    toName='displ_12-')
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['yyminus'], u1=0.0, u2=0.0, 
    u3=0.0)
mdb.models['Model-1'].ExpressionField(description='', expression=' 0.01*X -1', 
    localCsys=None, name='AnalyticalField-1')
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(
    distributionType=FIELD, fieldName='AnalyticalField-1')
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['xxplus'], u1=1.0, u3=UNSET)
mdb.models['Model-1'].analyticalFields['AnalyticalField-1'].setValues(
    expression=' 0.01*Y -1')
mdb.models['Model-1'].analyticalFields['AnalyticalField-1'].setValues(
    expression='0.05*Y -0.5')
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(u1=-1.0)
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(u2=UNSET, 
    u3=UNSET)
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(u1=1.0)
mdb.models['Model-1'].analyticalFields['AnalyticalField-1'].setValues(
    expression='( Y +1)/1.1')
mdb.models['Model-1'].analyticalFields.changeKey(fromName='AnalyticalField-1', 
    toName='shear_12')
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(
    fieldName='shear_12')
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(
    distributionType=FIELD, fieldName='shear_12', 
    region=mdb.models['Model-1'].rootAssembly.sets['xxminus'], u1=-1.0)
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
mdb.jobs['12_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\12_shear.odb', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 19164, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['12_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '12_shear', 'memory': 244.0})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['12_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(JOB_COMPLETED, {
    'time': 'Mon Apr 17 23:15:00 2023', 'jobName': '12_shear'})
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_12+', 
    toName='displ_13+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_12-', 
    toName='displ_13-')
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(
    expression='( Z+1)/1.1')
mdb.jobs['13_shear'].submit(consistencyChecking=OFF)
mdb.jobs['13_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\13_shear.odb', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 13920, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '13_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['13_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '13_shear', 'memory': 244.0})
mdb.jobs['13_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '13_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['13_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '13_shear'})
mdb.jobs['13_shear']._Message(JOB_COMPLETED, {
    'time': 'Mon Apr 17 23:27:35 2023', 'jobName': '13_shear'})
mdb.models['Model-1'].boundaryConditions['displ_13+'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['yyplus'])
mdb.models['Model-1'].boundaryConditions['displ_13-'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['yyminus'])
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_13+', 
    toName='displ_23+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_13-', 
    toName='displ_23-')
mdb.models['Model-1'].boundaryConditions['displ_23+'].setValues(u1=UNSET, 
    u2=1.0)
mdb.models['Model-1'].boundaryConditions['displ_23-'].setValues(u1=UNSET, 
    u2=-1.0)
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 15840, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '23_shear', 'memory': 244.0})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {
    'time': 'Mon Apr 17 23:46:34 2023', 'jobName': '23_shear'})
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, 
    createStepName='Loading_step', distributionType=UNIFORM, fieldName='', 
    fixed=OFF, localCsys=None, name='BC-3', 
    region=mdb.models['Model-1'].rootAssembly.sets['zzminus'], u1=0.0, u2=0.0, 
    u3=0.0, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='BC-3', 
    toName='fix')
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '42 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': '23_shear'})
del mdb.models['Model-1'].boundaryConditions['fix']
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 5396, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '23_shear', 'memory': 244.0})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {
    'time': 'Mon Apr 17 23:56:59 2023', 'jobName': '23_shear'})
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(
    expression='0.1*Z')
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(
    expression='0.1*(Z-1)')
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 18112, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '23_shear', 'memory': 244.0})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {
    'time': 'Tue Apr 18 00:13:56 2023', 'jobName': '23_shear'})
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 3092, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '23_shear', 'memory': 244.0})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {
    'time': 'Wed Apr 19 23:37:07 2023', 'jobName': '23_shear'})
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(
    expression='0.1*(Y-1)')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_23+', 
    toName='displ_12+')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='displ_23-', 
    toName='displ_12-')
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(u1=1.0, 
    u2=UNSET)
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(u1=1.0, 
    u2=UNSET)
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(u1=-1.0)
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(u1=1.0)
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(
    expression='0.1*(Y)')
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
mdb.jobs['12_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\12_shear.odb', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 8500, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['12_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '12_shear', 'memory': 244.0})
mdb.jobs['12_shear']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'There is zero FORCE everywhere in the model based on the default criterion. please check the value of the average FORCE during the current iteration to verify that the FORCE is small enough to be treated as zero. if not, please use the solution controls to reset the criterion for zero FORCE.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['12_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(JOB_COMPLETED, {
    'time': 'Thu Apr 20 00:22:52 2023', 'jobName': '12_shear'})
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, 
    createStepName='Loading_step', distributionType=UNIFORM, fieldName='', 
    fixed=OFF, localCsys=None, name='Fix1', 
    region=mdb.models['Model-1'].rootAssembly.sets['zzminus'], u1=UNSET, 
    u2=UNSET, u3=0.0, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, 
    createStepName='Loading_step', distributionType=UNIFORM, fieldName='', 
    fixed=OFF, localCsys=None, name='Fix2', 
    region=mdb.models['Model-1'].rootAssembly.sets['zzplus'], u1=UNSET, 
    u2=UNSET, u3=0.0, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, 
    createStepName='Loading_step', distributionType=UNIFORM, fieldName='', 
    fixed=OFF, localCsys=None, name='Fix', 
    region=mdb.models['Model-1'].rootAssembly.sets['yyplus'], u1=UNSET, u2=0.0, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, 
    createStepName='Loading_step', distributionType=UNIFORM, fieldName='', 
    fixed=OFF, localCsys=None, name='Fix4', 
    region=mdb.models['Model-1'].rootAssembly.sets['yyminus'], u1=UNSET, 
    u2=0.0, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(
    expression='0.1*(Y+1)/2')
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['xxplus'])
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['xxminus'])
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
mdb.jobs['12_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\12_shear.odb', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 25416, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['12_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '12_shear', 'memory': 244.0})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['12_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(JOB_COMPLETED, {
    'time': 'Thu Apr 20 20:55:23 2023', 'jobName': '12_shear'})
mdb.models['Model-1'].materials['Matrix'].elastic.setValues(table=((3350.0, 
    0.35), ))
mdb.models['Model-1'].materials['Fibre'].elastic.setValues(table=((80000.0, 
    80000.0, 80000.0, 0.2, 0.2, 0.2, 33330.0, 33330.0, 33330.0), ))
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(
    expression='0.01*(Y+1)/2')
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
mdb.jobs['12_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\12_shear.odb', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 25964, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['12_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '12_shear', 'memory': 244.0})
mdb.jobs['12_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '12_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['12_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '12_shear'})
mdb.jobs['12_shear']._Message(JOB_COMPLETED, {
    'time': 'Thu Apr 20 21:33:40 2023', 'jobName': '12_shear'})
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(
    expression='0.01*( Z +1)/2')
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(
    expression='0.01*( Y +1)/2')
mdb.models['Model-1'].analyticalFields.changeKey(fromName='shear_12', 
    toName='shear_23')
mdb.models['Model-1'].boundaryConditions['displ_12+'].setValues(
    fieldName='shear_23', 
    region=mdb.models['Model-1'].rootAssembly.sets['zzplus'], u1=UNSET, u3=1.0)
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(
    distributionType=UNIFORM, 
    region=mdb.models['Model-1'].rootAssembly.sets['zzminus'], u1=UNSET, 
    u3=1.0)
mdb.models['Model-1'].boundaryConditions['displ_12-'].setValues(
    distributionType=FIELD, fieldName='shear_23')
mdb.models['Model-1'].boundaryConditions['Fix1'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['yyplus'], u2=0.0, u3=UNSET)
mdb.models['Model-1'].boundaryConditions['Fix2'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['yyminus'], u2=0.0, 
    u3=UNSET)
mdb.models['Model-1'].boundaryConditions['Fix'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['xxplus'], u1=0.0, u2=UNSET)
mdb.models['Model-1'].boundaryConditions['Fix4'].setValues(
    region=mdb.models['Model-1'].rootAssembly.sets['xxminus'], u1=0.0, 
    u2=UNSET)
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
mdb.jobs['23_shear']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '36 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\23_shear.odb', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QELVSQ1', 'handle': 24144, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['23_shear']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '23_shear', 'memory': 244.0})
mdb.jobs['23_shear']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '23_shear', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['23_shear']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '23_shear'})
mdb.jobs['23_shear']._Message(JOB_COMPLETED, {
    'time': 'Thu Apr 20 21:49:58 2023', 'jobName': '23_shear'})
#--- End of Recover file ------
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON, optimizationTasks=OFF, 
    geometricRestrictions=OFF, stopConditions=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=ON, loads=OFF, 
    bcs=OFF, predefinedFields=OFF, connectors=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=OFF, loads=ON, 
    bcs=ON, predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Loading_step')
mdb.models['Model-1'].boundaryConditions['Fix'].setValues(u1=UNSET, u2=0.0, 
    u3=0.0)
del mdb.models['Model-1'].boundaryConditions['Fix']
del mdb.models['Model-1'].boundaryConditions['Fix1']
del mdb.models['Model-1'].boundaryConditions['Fix2']
del mdb.models['Model-1'].boundaryConditions['Fix4']
del mdb.models['Model-1'].boundaryConditions['displ_12+']
del mdb.models['Model-1'].boundaryConditions['displ_12-']
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#c ]', ), )
region = a.Set(faces=faces1, name='Set-8')
mdb.models['Model-1'].DisplacementBC(name='BC-1', 
    createStepName='Loading_step', region=region, u1=0.01, u2=UNSET, u3=UNSET, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.03696, 
    farPlane=9.59942, width=5.13996, height=2.36366, cameraPosition=(-3.75709, 
    0.999243, 7.20098), cameraUpVector=(-0.18796, 0.742806, -0.642581), 
    cameraTarget=(0.0419585, -0.0839159, 1.04196))
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#22 ]', ), )
region = a.Set(faces=faces1, name='Set-9')
mdb.models['Model-1'].DisplacementBC(name='BC-2', 
    createStepName='Loading_step', region=region, u1=-1.0, u2=UNSET, u3=UNSET, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.94603, 
    farPlane=9.63265, width=5.04718, height=2.32099, cameraPosition=(-1.82166, 
    4.2231, 6.65607), cameraUpVector=(0.238059, 0.565809, -0.789423), 
    cameraTarget=(0.0422525, -0.0834262, 1.04188))
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(u1=-0.01)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['XX_displacement'].submit(consistencyChecking=OFF)
#: The job input file "XX_displacement.inp" has been submitted for analysis.
mdb.jobs['XX_displacement'].kill()
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
#: Job XX_displacement: Analysis Input File Processor completed successfully.
#: Job XX_displacement: Abaqus/Standard completed successfully.
#: Job XX_displacement completed successfully. 
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.18826, 
    farPlane=9.56867, width=5.29437, height=2.43466, cameraPosition=(-0.487123, 
    -5.72135, 5.63384), cameraUpVector=(-0.386579, 0.814752, 0.432128), 
    cameraTarget=(0.0371753, -0.0455931, 1.04577))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.22447, 
    farPlane=9.53476, width=5.33132, height=2.45166, cameraPosition=(-1.07745, 
    2.41972, 7.888), cameraUpVector=(-0.0354129, 0.77211, -0.634501), 
    cameraTarget=(0.0322626, 0.0221552, 1.06453))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.52658, 
    farPlane=9.22199, width=5.63962, height=2.59343, cameraPosition=(-0.592421, 
    -7.34994, 0.903885), cameraUpVector=(-0.14266, 0.333941, 0.931736), 
    cameraTarget=(0.0363733, -0.0606443, 1.00534))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.15183, 
    farPlane=9.58931, width=5.2572, height=2.41757, cameraPosition=(-0.131354, 
    -4.39927, -4.91237), cameraUpVector=(-0.166852, -0.542656, 0.823216), 
    cameraTarget=(0.0399506, -0.0377508, 0.960213))
session.viewports['Viewport: 1'].view.setValues(width=4.99358, height=2.29634, 
    viewOffsetX=-0.0715749, viewOffsetY=-0.0398529)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.37169, 
    farPlane=9.32127, width=5.15267, height=2.3695, cameraPosition=(-1.21909, 
    0.956512, 8.18236), cameraUpVector=(0.0115324, 0.896507, -0.44288), 
    cameraTarget=(0.039858, 0.123961, 1.02266), viewOffsetX=-0.0738552, 
    viewOffsetY=-0.0411226)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.33645, 
    farPlane=9.36488, width=5.11887, height=2.35396, cameraPosition=(-0.156941, 
    2.37691, 7.9552), cameraUpVector=(-0.0410824, 0.792838, -0.608046), 
    cameraTarget=(0.0452845, 0.126363, 0.995786), viewOffsetX=-0.0733707, 
    viewOffsetY=-0.0408528)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#1d0 ]', ), )
region = a.Set(faces=faces1, name='Set-10')
mdb.models['Model-1'].DisplacementBC(name='BC-3', 
    createStepName='Loading_step', region=region, u1=UNSET, u2=0.0, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['XX_displacement'].submit(consistencyChecking=OFF)
#: The job input file "XX_displacement.inp" has been submitted for analysis.
#: Job XX_displacement: Analysis Input File Processor completed successfully.
#: Job XX_displacement: Abaqus/Standard completed successfully.
#: Job XX_displacement completed successfully. 
o3 = session.openOdb(name='E:/Project/XX_displacement.odb')
#: Model: E:/Project/XX_displacement.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       13
#: Number of Node Sets:          12
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    DEFORMED, ))
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.animationController.setValues(animationType=SCALE_FACTOR, viewports=(
    'Viewport: 1', ))
session.animationController.play(duration=UNLIMITED)
session.animationController.setValues(animationType=NONE)
leaf = dgo.LeafFromOdbElementMaterials(elementMaterials=('FIBRE', ))
session.viewports['Viewport: 1'].odbDisplay.displayGroup.remove(leaf=leaf)
dg = session.viewports['Viewport: 1'].odbDisplay.displayGroup
dg = session.DisplayGroup(name='MATRIX', objectToCopy=dg)
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(dg, 
    ))
session.viewports['Viewport: 1'].odbDisplay.displayGroupInstances['MATRIX'].setValues(
    lockOptions=OFF)
leaf = dgo.LeafFromOdbElementMaterials(elementMaterials=('FIBRE', ))
dg = session.DisplayGroup(leaf=leaf, name='FIBRE')
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/XX_displacement.odb']
session.writeFieldReport(fileName='E:/Project/XX/E_matrix.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/XX_displacement.odb']
session.writeFieldReport(fileName='E:/Project/XX/E_fibre.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
session.animationController.setValues(animationType=TIME_HISTORY, viewports=(
    'Viewport: 1', ))
session.animationController.play(duration=UNLIMITED)
session.animationController.setValues(animationType=NONE)
session.animationController.setValues(animationType=SCALE_FACTOR, viewports=(
    'Viewport: 1', ))
session.animationController.play(duration=UNLIMITED)
session.animationController.setValues(animationType=NONE)
session.animationController.setValues(animationType=SCALE_FACTOR, viewports=(
    'Viewport: 1', ))
session.animationController.play(duration=UNLIMITED)
session.animationController.setValues(animationType=NONE)
session.animationController.setValues(animationType=HARMONIC, viewports=(
    'Viewport: 1', ))
session.animationController.play(duration=UNLIMITED)
session.animationController.setValues(animationType=NONE)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    DEFORMED, ))
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.animationController.setValues(animationType=SCALE_FACTOR, viewports=(
    'Viewport: 1', ))
session.animationController.play(duration=UNLIMITED)
session.animationController.setValues(animationType=NONE)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    DEFORMED, ))
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    DEFORMED, ))
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=ON, 
    constraints=ON, connectors=ON, engineeringFeatures=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, interactions=OFF, constraints=OFF, 
    engineeringFeatures=OFF)
a = mdb.models['Model-1'].rootAssembly
region = a.sets['yyplus']
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=region, 
    u1=UNSET, u2=0.01)
a = mdb.models['Model-1'].rootAssembly
region = a.sets['yyminus']
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(region=region, 
    u1=UNSET, u2=0.01)
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(u2=-0.01)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.02904, 
    farPlane=9.80351, width=4.824, height=2.21836, cameraPosition=(-5.06119, 
    4.82609, 3.47064), cameraUpVector=(0.76558, 0.507776, -0.395033), 
    cameraTarget=(0.00211787, 0.123604, 1.06462), viewOffsetX=-0.0691441, 
    viewOffsetY=-0.0384994)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.0971, 
    farPlane=9.80286, width=4.88929, height=2.24838, cameraPosition=(-5.56698, 
    2.836, -3.05916), cameraUpVector=(0.542503, 0.75013, 0.378148), 
    cameraTarget=(-0.123263, 0.105804, 0.996868), viewOffsetX=-0.0700799, 
    viewOffsetY=-0.0390204)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.48954, 
    farPlane=9.46767, width=5.26573, height=2.42149, cameraPosition=(2.52579, 
    -0.0259466, -6.04002), cameraUpVector=(0.162438, 0.901634, 0.400838), 
    cameraTarget=(-0.0100203, 0.0850646, 0.822683), viewOffsetX=-0.0754756, 
    viewOffsetY=-0.0420247)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.17102, 
    farPlane=9.80171, width=4.9602, height=2.28099, cameraPosition=(5.44228, 
    4.98546, 2.25921), cameraUpVector=(-0.839161, 0.486687, -0.242784), 
    cameraTarget=(0.117218, 0.148481, 0.922528), viewOffsetX=-0.0710963, 
    viewOffsetY=-0.0395863)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.20148, 
    farPlane=9.7765, width=4.98942, height=2.29443, cameraPosition=(5.21286, 
    1.5705, 6.14375), cameraUpVector=(-0.418201, 0.852996, -0.312259), 
    cameraTarget=(0.179822, 0.0946095, 1.04182), viewOffsetX=-0.0715151, 
    viewOffsetY=-0.0398195)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#1ae ]', ), )
region = a.Set(faces=faces1, name='Set-11')
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(region=region, 
    u1=0.0, u2=UNSET)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.15132, 
    farPlane=9.83316, width=4.94131, height=2.27231, cameraPosition=(2.21563, 
    -4.79051, 6.31878), cameraUpVector=(0.138639, 0.935521, 0.324931), 
    cameraTarget=(0.159164, -0.0722557, 1.11798), viewOffsetX=-0.0708255, 
    viewOffsetY=-0.0394355)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.40383, 
    farPlane=9.58237, width=5.18353, height=2.3837, cameraPosition=(-6.47754, 
    -3.75771, 1.28587), cameraUpVector=(0.294253, 0.214504, 0.931345), 
    cameraTarget=(-0.101633, -0.174646, 1.06501), viewOffsetX=-0.0742973, 
    viewOffsetY=-0.0413686)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.38492, 
    farPlane=9.59968, width=5.16539, height=2.37536, cameraPosition=(-7.0894, 
    -2.07915, 2.25146), cameraUpVector=(0.460522, 0.13404, 0.87747), 
    cameraTarget=(-0.130029, -0.144884, 1.0831), viewOffsetX=-0.0740373, 
    viewOffsetY=-0.0412238)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.27444, 
    farPlane=9.70928, width=5.05941, height=2.32662, cameraPosition=(-6.76851, 
    -1.86337, 3.61861), cameraUpVector=(0.609058, 0.184077, 0.771469), 
    cameraTarget=(-0.113759, -0.136514, 1.11431), viewOffsetX=-0.0725182, 
    viewOffsetY=-0.040378)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['YY_displacement'].submit(consistencyChecking=OFF)
#: The job input file "YY_displacement.inp" has been submitted for analysis.
#: Job YY_displacement: Analysis Input File Processor completed successfully.
#: Job YY_displacement: Abaqus/Standard completed successfully.
#: Job YY_displacement completed successfully. 
o3 = session.openOdb(name='E:/Project/YY_displacement.odb')
#: Model: E:/Project/YY_displacement.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       14
#: Number of Node Sets:          13
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    DEFORMED, ))
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.21481, 
    farPlane=9.76308, width=5.00222, height=2.30031, cameraPosition=(-1.22826, 
    5.64578, 5.76598), cameraUpVector=(0.984503, -0.162176, -0.0667294), 
    cameraTarget=(0.02091, 0.0705831, 1.19477), viewOffsetX=-0.0716983, 
    viewOffsetY=-0.0399215)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.3903, 
    farPlane=9.58823, width=5.17056, height=2.37772, cameraPosition=(-4.17598, 
    6.21791, 1.04113), cameraUpVector=(0.810038, 0.154915, -0.565544), 
    cameraTarget=(-0.0100289, 0.202594, 1.04767), viewOffsetX=-0.0741111, 
    viewOffsetY=-0.041265)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.16839, 
    farPlane=9.81054, width=4.95769, height=2.27983, cameraPosition=(-5.54821, 
    1.67153, 5.74649), cameraUpVector=(0.39286, 0.848615, -0.354279), 
    cameraTarget=(-0.0548676, 0.0950198, 1.17735), viewOffsetX=-0.07106, 
    viewOffsetY=-0.0395662)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.46908, 
    farPlane=9.51024, width=5.24612, height=2.41247, cameraPosition=(-7.09387, 
    0.584177, 3.33337), cameraUpVector=(0.355916, 0.914215, -0.193739), 
    cameraTarget=(-0.130683, 0.0770929, 1.14335), viewOffsetX=-0.0751942, 
    viewOffsetY=-0.0418681)
odb = session.odbs['E:/Project/YY_displacement.odb']
session.viewports['Viewport: 1'].setValues(displayedObject=odb)
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='E', outputPosition=INTEGRATION_POINT, refinement=(INVARIANT, 
    'Max. Principal'), )
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/YY_displacement.odb']
session.writeFieldReport(fileName='E:/Project/YY/Eyy_fibre.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/YY_displacement.odb']
session.writeFieldReport(fileName='E:/Project/YY/Eyy_matrix.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
a = mdb.models['Model-1'].rootAssembly
region = a.sets['zzplus']
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=region, 
    u2=UNSET, u3=0.01)
a = mdb.models['Model-1'].rootAssembly
region = a.sets['zzminus']
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(region=region, 
    u2=UNSET, u3=-0.01)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.08257, 
    farPlane=9.89584, width=4.87537, height=2.24198, cameraPosition=(4.45733, 
    5.38124, 3.69751), cameraUpVector=(0.377444, -0.333392, -0.863936), 
    cameraTarget=(0.190956, 0.0500491, 1.06774), viewOffsetX=-0.0698801, 
    viewOffsetY=-0.0389092)
session.viewports['Viewport: 1'].view.setValues(width=4.62509, height=2.12689, 
    viewOffsetX=-0.0938165, viewOffsetY=-0.044936)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.38551, 
    farPlane=9.54843, width=4.856, height=2.23308, cameraPosition=(0.354889, 
    -3.55982, 7.55648), cameraUpVector=(-0.375972, -0.620862, -0.687878), 
    cameraTarget=(-0.16229, -0.0717184, 1.14517), viewOffsetX=-0.0985003, 
    viewOffsetY=-0.0471794)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.14499, 
    farPlane=9.79968, width=4.63913, height=2.13335, cameraPosition=(-4.39676, 
    -5.60225, 3.26909), cameraUpVector=(0.0110455, 0.0212811, -0.999713), 
    cameraTarget=(-0.229153, -0.035029, 0.993935), viewOffsetX=-0.0941013, 
    viewOffsetY=-0.0450724)
session.viewports['Viewport: 1'].view.setValues(width=4.38676, height=2.01729, 
    viewOffsetX=-0.108126, viewOffsetY=-0.039178)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#7e ]', ), )
region = a.Set(faces=faces1, name='Set-12')
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(region=region, 
    u2=0.0, u3=UNSET)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.40826, 
    farPlane=9.52704, width=4.58394, height=2.10796, cameraPosition=(2.468, 
    -6.93042, -0.293475), cameraUpVector=(-0.0597711, 0.492078, -0.868497), 
    cameraTarget=(-0.0932861, -0.180772, 0.898738), viewOffsetX=-0.112986, 
    viewOffsetY=-0.040939)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.40521, 
    farPlane=9.52784, width=4.58136, height=2.10677, cameraPosition=(3.8428, 
    -6.40097, 1.196), cameraUpVector=(-0.0932115, 0.295172, -0.950886), 
    cameraTarget=(-0.0497853, -0.210773, 0.93414), viewOffsetX=-0.112922, 
    viewOffsetY=-0.040916)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.32581, 
    farPlane=9.60724, width=5.43481, height=2.49925, viewOffsetX=-0.10652, 
    viewOffsetY=-0.0107344)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.04368, 
    farPlane=9.91917, width=5.14691, height=2.36685, cameraPosition=(5.30589, 
    -4.52256, -1.71931), cameraUpVector=(-0.433765, 0.486861, -0.758165), 
    cameraTarget=(0.00210577, -0.200003, 0.87389), viewOffsetX=-0.100877, 
    viewOffsetY=-0.0101657)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.98433, 
    farPlane=9.97853, width=6.17402, height=2.83918, viewOffsetX=-0.0770757, 
    viewOffsetY=0.00495275)
odb = session.odbs['E:/Project/YY_displacement.odb']
session.viewports['Viewport: 1'].setValues(displayedObject=odb)
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['ZZ_displacement'].submit(consistencyChecking=OFF)
#: The job input file "ZZ_displacement.inp" has been submitted for analysis.
#: Job ZZ_displacement: Analysis Input File Processor completed successfully.
#: Job ZZ_displacement: Abaqus/Standard completed successfully.
#: Job ZZ_displacement completed successfully. 
o3 = session.openOdb(name='E:/Project/ZZ_displacement.odb')
#: Model: E:/Project/ZZ_displacement.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       15
#: Number of Node Sets:          14
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/ZZ_displacement.odb']
session.writeFieldReport(fileName='E:/Project/ZZ/E_matrix.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/ZZ_displacement.odb']
session.writeFieldReport(fileName='E:/Project/ZZ/E_fibre.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.01773, 
    farPlane=9.639, width=5.12034, height=2.35464, cameraPosition=(5.08958, 
    3.4351, 5.00145), cameraUpVector=(-0.555406, 0.665146, -0.499105), 
    cameraTarget=(0.0419574, -0.0839157, 1.04196))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.27332, 
    farPlane=9.33942, width=5.38116, height=2.47458, cameraPosition=(6.15977, 
    3.91851, 0.69083), cameraUpVector=(-0.737398, 0.476311, -0.478927), 
    cameraTarget=(0.0436068, -0.0831707, 1.03532))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.26336, 
    farPlane=9.4621, width=5.371, height=2.46991, cameraPosition=(5.87873, 
    0.523427, 5.40263), cameraUpVector=(-0.361468, 0.910535, -0.200666), 
    cameraTarget=(0.0440185, -0.0781968, 1.02842))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.24667, 
    farPlane=9.3848, width=5.35397, height=2.46208, cameraPosition=(-1.67417, 
    4.06415, 6.84846), cameraUpVector=(-0.0257025, 0.562817, -0.826182), 
    cameraTarget=(-0.00282043, -0.0562391, 1.03739))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.43877, 
    farPlane=9.26244, width=5.55, height=2.55223, cameraPosition=(-2.97497, 
    0.143772, 7.7204), cameraUpVector=(-0.081144, 0.900185, -0.427882), 
    cameraTarget=(-0.00258257, -0.0555224, 1.03723))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.14054, 
    farPlane=9.58729, width=5.24567, height=2.41228, cameraPosition=(-4.82073, 
    -2.13471, 6.14141), cameraUpVector=(0.096781, 0.995166, 0.0166816), 
    cameraTarget=(-0.0110025, -0.0659163, 1.03003))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.66733, 
    farPlane=9.04275, width=5.78323, height=2.65948, cameraPosition=(-0.634543, 
    0.568173, 8.30577), cameraUpVector=(0.0477905, 0.911284, -0.408995), 
    cameraTarget=(0.0156243, -0.0487242, 1.0438))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.21761, 
    farPlane=9.51168, width=5.32431, height=2.44844, cameraPosition=(6.87424, 
    1.36185, 3.26521), cameraUpVector=(-0.433543, 0.849316, -0.301168), 
    cameraTarget=(0.0543899, -0.0446267, 1.01778))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.35499, 
    farPlane=9.37509, width=5.4645, height=2.51291, cameraPosition=(3.33826, 
    0.895805, 7.50388), cameraUpVector=(-0.297146, 0.886395, -0.354977), 
    cameraTarget=(0.0315466, -0.0476375, 1.04516))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.34106, 
    farPlane=9.40455, width=5.45029, height=2.50637, cameraPosition=(6.83533, 
    0.278098, 3.74995), cameraUpVector=(-0.343419, 0.926738, -0.152382), 
    cameraTarget=(0.0543237, -0.0516608, 1.02071))
session.animationController.setValues(animationType=SCALE_FACTOR, viewports=(
    'Viewport: 1', ))
session.animationController.play(duration=UNLIMITED)
session.animationController.setValues(animationType=NONE)
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.18094, 
    farPlane=9.65196, width=6.41756, height=2.95117, cameraPosition=(6.83121, 
    0.344318, 3.87133), cameraUpVector=(-0.239758, 0.885131, -0.398822), 
    cameraTarget=(0.15371, -0.0454144, 0.905122), viewOffsetX=-0.0801159, 
    viewOffsetY=0.00514811)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.13672, 
    farPlane=9.6453, width=6.36279, height=2.92598, cameraPosition=(3.50233, 
    -0.00623697, 7.5102), cameraUpVector=(-0.152075, 0.942249, -0.298395), 
    cameraTarget=(0.164672, -0.0184988, 0.998732), viewOffsetX=-0.0794321, 
    viewOffsetY=0.00510417)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.28234, 
    farPlane=9.47443, width=6.54317, height=3.00893, cameraPosition=(0.966133, 
    0.707722, 8.28199), cameraUpVector=(-0.136291, 0.901876, -0.409932), 
    cameraTarget=(0.151181, -0.000496421, 1.04503), viewOffsetX=-0.0816839, 
    viewOffsetY=0.00524887)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.0505, 
    farPlane=9.71538, width=6.256, height=2.87687, cameraPosition=(2.23098, 
    1.34237, 7.91011), cameraUpVector=(-0.190004, 0.864449, -0.465431), 
    cameraTarget=(0.157757, -0.000215903, 1.02255), viewOffsetX=-0.0780989, 
    viewOffsetY=0.0050185)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(
    distributionType=FIELD, fieldName='shear_23', u1=1.0, u2=0.0, u3=0.0)
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(
    distributionType=FIELD, fieldName='shear_23', u1=1.0, u2=0.0, u3=0.0)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.8393, 
    farPlane=9.93914, width=5.99438, height=2.75657, cameraPosition=(2.96018, 
    5.67686, -2.6922), cameraUpVector=(-0.511346, -0.580827, -0.633376), 
    cameraTarget=(0.152388, -0.0172331, 0.945499), viewOffsetX=-0.0748329, 
    viewOffsetY=0.00480863)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.03701, 
    farPlane=9.79093, width=6.23928, height=2.86919, cameraPosition=(2.82758, 
    -6.58067, -0.91947), cameraUpVector=(-0.413531, -0.0651974, 0.908153), 
    cameraTarget=(0.155923, -0.0502893, 1.01848), viewOffsetX=-0.0778902, 
    viewOffsetY=0.00500509)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.08749, 
    farPlane=9.73979, width=6.30181, height=2.89795, cameraPosition=(2.21015, 
    -6.85717, 2.75338), cameraUpVector=(-0.455272, 0.416369, 0.786997), 
    cameraTarget=(0.148571, -0.0448818, 1.05579), viewOffsetX=-0.0786708, 
    viewOffsetY=0.00505525)
a = mdb.models['Model-1'].rootAssembly
c1 = a.instances['Part-1-1'].cells
cells1 = c1.getSequenceFromMask(mask=('[#3 ]', ), )
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#1f1 ]', ), )
region = a.Set(faces=faces1, cells=cells1, name='Set-13')
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(region=region, 
    u1=UNSET, u3=0.0)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.83322, 
    farPlane=10.0104, width=5.98686, height=2.75311, cameraPosition=(5.29383, 
    -3.16586, -3.12951), cameraUpVector=(-0.489429, -0.703745, 0.514979), 
    cameraTarget=(0.16301, -0.0187874, 1.031), viewOffsetX=-0.0747389, 
    viewOffsetY=0.00480259)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.89279, 
    farPlane=9.96006, width=6.06065, height=2.78704, cameraPosition=(3.2845, 
    3.87613, -4.41809), cameraUpVector=(-0.137384, -0.94442, -0.298659), 
    cameraTarget=(0.160348, 0.0426204, 0.974788), viewOffsetX=-0.0756601, 
    viewOffsetY=0.00486179)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.18923, 
    farPlane=9.68656, width=6.42785, height=2.9559, cameraPosition=(-0.0352861, 
    6.37137, 4.8396), cameraUpVector=(0.107743, 0.19696, -0.974473), 
    cameraTarget=(0.120879, 0.0930246, 1.08497), viewOffsetX=-0.0802442, 
    viewOffsetY=0.00515635)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.05173, 
    farPlane=9.82313, width=6.25753, height=2.87758, cameraPosition=(-3.16743, 
    1.1186, 7.63683), cameraUpVector=(0.239184, 0.880548, -0.409177), 
    cameraTarget=(0.0585333, 0.00462425, 1.16446), viewOffsetX=-0.0781179, 
    viewOffsetY=0.00501972)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.96032, 
    farPlane=9.90608, width=6.14431, height=2.82551, cameraPosition=(-5.87482, 
    -1.74959, 5.20636), cameraUpVector=(-0.0455428, 0.966185, -0.253795), 
    cameraTarget=(-0.0263609, -0.0103507, 1.1678), viewOffsetX=-0.0767044, 
    viewOffsetY=0.00492889)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.22222, 
    farPlane=9.63488, width=6.46872, height=2.97469, cameraPosition=(-6.83252, 
    -2.91708, 0.924032), cameraUpVector=(-0.0599751, 0.995658, -0.0711964), 
    cameraTarget=(-0.104209, -0.0481197, 1.11969), viewOffsetX=-0.0807543, 
    viewOffsetY=0.00518913)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.08828, 
    farPlane=9.77112, width=6.30281, height=2.89839, cameraPosition=(-6.5306, 
    0.641325, 4.48647), cameraUpVector=(0.326977, 0.906163, -0.268243), 
    cameraTarget=(-0.0439821, 0.00778253, 1.16054), viewOffsetX=-0.0786831, 
    viewOffsetY=0.00505604)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.20881, 
    farPlane=9.66285, width=6.4521, height=2.96706, cameraPosition=(-2.22374, 
    -0.547949, 8.07537), cameraUpVector=(0.108578, 0.963883, -0.243187), 
    cameraTarget=(0.076715, -0.0241464, 1.14912), viewOffsetX=-0.0805469, 
    viewOffsetY=0.0051758)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.25262, 
    farPlane=9.62176, width=6.50637, height=2.99202, cameraPosition=(1.33081, 
    0.996883, 8.24991), cameraUpVector=(-0.290961, 0.864801, -0.409221), 
    cameraTarget=(0.135893, 0.0300469, 1.09611), viewOffsetX=-0.0812244, 
    viewOffsetY=0.00521933)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.40653, 
    farPlane=9.46883, width=6.69702, height=3.07969, cameraPosition=(0.807437, 
    -0.175922, 8.3926), cameraUpVector=(-0.157049, 0.941719, -0.297491), 
    cameraTarget=(0.130269, 0.00025019, 1.10906), viewOffsetX=-0.0836045, 
    viewOffsetY=0.00537227)
a = mdb.models['Model-1'].rootAssembly
region = a.sets['xxplus']
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=region)
a = mdb.models['Model-1'].rootAssembly
region = a.sets['xxminus']
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(region=region)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.15846, 
    farPlane=9.71994, width=6.38974, height=2.93838, cameraPosition=(3.26753, 
    -0.0876667, 7.68369), cameraUpVector=(-0.0993301, 0.944938, -0.311811), 
    cameraTarget=(0.159531, -0.0189421, 1.05985), viewOffsetX=-0.0797684, 
    viewOffsetY=0.00512577)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
#: The job input file "12_shear.inp" has been submitted for analysis.
#: Job 12_shear: Analysis Input File Processor completed successfully.
#: Job 12_shear: Abaqus/Standard completed successfully.
#: Job 12_shear completed successfully. 
o3 = session.openOdb(name='E:/Project/12_shear.odb')
#: Model: E:/Project/12_shear.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       16
#: Number of Node Sets:          15
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='E', outputPosition=INTEGRATION_POINT, refinement=(INVARIANT, 
    'Max. Principal'), )
odb = session.odbs['E:/Project/12_shear.odb']
session.writeFieldReport(fileName='E:/Project/12shear/E_matrix.csv', 
    append=OFF, sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/12_shear.odb']
session.writeFieldReport(fileName='E:/Project/12shear/E_fibre.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u1=0.0, u3=1.0)
a = mdb.models['Model-1'].rootAssembly
region = a.sets['zzplus']
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=region)
a = mdb.models['Model-1'].rootAssembly
region = a.sets['zzminus']
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(region=region, 
    u1=0.0, u3=1.0)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.87909, 
    farPlane=9.99974, width=6.04368, height=2.77924, cameraPosition=(5.72714, 
    2.47056, 5.0565), cameraUpVector=(-0.546868, 0.775783, -0.314795), 
    cameraTarget=(0.164714, 0.0364886, 0.973086), viewOffsetX=-0.0754483, 
    viewOffsetY=0.00484817)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.92367, 
    farPlane=9.94232, width=6.0989, height=2.80463, cameraPosition=(-2.34149, 
    5.75331, 5.08405), cameraUpVector=(-0.641553, -0.160949, -0.750003), 
    cameraTarget=(0.0290506, 0.160767, 1.0044), viewOffsetX=-0.0761376, 
    viewOffsetY=0.00489247)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.8654, 
    farPlane=10.0014, width=6.02672, height=2.77144, cameraPosition=(-3.30497, 
    -4.52809, 5.88283), cameraUpVector=(0.0150208, -0.433569, -0.900995), 
    cameraTarget=(-0.149701, -0.0205772, 1.05932), viewOffsetX=-0.0752366, 
    viewOffsetY=0.00483457)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.86897, 
    farPlane=9.99692, width=6.03115, height=2.77348, cameraPosition=(-4.22062, 
    -5.02216, 4.49654), cameraUpVector=(0.165142, -0.298355, -0.94006), 
    cameraTarget=(-0.158032, -0.0213719, 1.02853), viewOffsetX=-0.0752919, 
    viewOffsetY=0.00483812)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.87846, 
    farPlane=9.99172, width=6.04291, height=2.77889, cameraPosition=(4.163, 
    -3.38699, 6.14698), cameraUpVector=(0.397879, -0.152093, -0.904743), 
    cameraTarget=(0.00130457, -0.145722, 1.07608), viewOffsetX=-0.0754387, 
    viewOffsetY=0.00484755)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.00606, 
    farPlane=9.86563, width=6.20097, height=2.85158, cameraPosition=(4.76611, 
    5.51244, 2.48401), cameraUpVector=(0.119731, -0.299577, -0.94653), 
    cameraTarget=(0.151994, 0.0140325, 1.06378), viewOffsetX=-0.0774119, 
    viewOffsetY=0.00497435)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#7e ]', ), )
region = a.Set(faces=faces1, name='Set-14')
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(region=region, 
    u1=0.0, u3=UNSET)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.93056, 
    farPlane=9.94132, width=6.10746, height=2.80857, cameraPosition=(5.33299, 
    4.75273, -1.06815), cameraUpVector=(-0.603912, -0.182893, -0.775784), 
    cameraTarget=(0.154681, -0.0101206, 0.941818), viewOffsetX=-0.0762443, 
    viewOffsetY=0.00489932)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.1766, 
    farPlane=9.69493, width=6.41223, height=2.94872, cameraPosition=(1.33064, 
    2.14347, 7.99563), cameraUpVector=(-0.069996, 0.805294, -0.588729), 
    cameraTarget=(0.132958, 0.0236334, 1.09552), viewOffsetX=-0.080049, 
    viewOffsetY=0.0051438)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.21075, 
    farPlane=9.66077, width=6.45454, height=2.96818, cameraPosition=(7.21803, 
    1.47903, 2.00812), cameraUpVector=(-0.504428, 0.856381, -0.110286), 
    cameraTarget=(0.134752, 0.0128215, 0.904928), viewOffsetX=-0.0805772, 
    viewOffsetY=0.00517774)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
#: The job input file "23_shear.inp" has been submitted for analysis.
#: Job 23_shear: Analysis Input File Processor completed successfully.
#: Job 23_shear: Abaqus/Standard completed successfully.
#: Job 23_shear completed successfully. 
o3 = session.openOdb(name='E:/Project/23_shear.odb')
#: Model: E:/Project/23_shear.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       17
#: Number of Node Sets:          16
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
session.animationController.setValues(animationType=SCALE_FACTOR, viewports=(
    'Viewport: 1', ))
session.animationController.play(duration=UNLIMITED)
session.animationController.setValues(animationType=NONE)
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='E', outputPosition=INTEGRATION_POINT, refinement=(INVARIANT, 
    'Max. Principal'), )
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/23_shear.odb']
session.writeFieldReport(fileName='E:/Project/23shear/E_fibre.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/23_shear.odb']
session.writeFieldReport(fileName='E:/Project/23shear/E_matrix.csv', 
    append=OFF, sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.99323, 
    farPlane=9.87825, width=6.18511, height=2.84428, cameraPosition=(4.55336, 
    -5.78109, -0.0721223), cameraUpVector=(0.0200312, 0.594762, -0.803652), 
    cameraTarget=(-0.0131525, -0.154721, 0.943044), viewOffsetX=-0.0772136, 
    viewOffsetY=0.0049616)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.19016, 
    farPlane=9.68133, width=6.42905, height=2.95646, cameraPosition=(6.95771, 
    -2.52671, 1.71384), cameraUpVector=(-0.0402169, 0.661368, -0.748983), 
    cameraTarget=(0.0878282, -0.128461, 0.943952), viewOffsetX=-0.0802588, 
    viewOffsetY=0.00515728)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.80281, 
    farPlane=10.0687, width=5.94924, height=2.73581, cameraPosition=(4.10169, 
    -3.89674, -3.82651), cameraUpVector=(-0.304384, 0.849997, -0.429949), 
    cameraTarget=(-0.0260181, -0.120062, 0.889247), viewOffsetX=-0.074269, 
    viewOffsetY=0.00477238)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.37783, 
    farPlane=9.49367, width=6.66152, height=3.06336, cameraPosition=(7.30064, 
    -1.32294, 1.50414), cameraUpVector=(-0.227388, 0.267115, -0.936453), 
    cameraTarget=(0.0997016, -0.131422, 0.987981), viewOffsetX=-0.083161, 
    viewOffsetY=0.00534376)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.03182, 
    farPlane=9.8397, width=6.23292, height=2.86626, cameraPosition=(2.08372, 
    6.84157, 3.03833), cameraUpVector=(0.0147409, -0.0706364, -0.997393), 
    cameraTarget=(0.140843, 0.0750998, 1.04341), viewOffsetX=-0.0778104, 
    viewOffsetY=0.00499994)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.19364, 
    farPlane=9.67787, width=6.43337, height=2.95844, cameraPosition=(1.71309, 
    7.09636, 2.41803), cameraUpVector=(0.0908363, -0.176333, -0.98013), 
    cameraTarget=(0.134833, 0.0847435, 1.04472), viewOffsetX=-0.0803128, 
    viewOffsetY=0.00516074)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.30789, 
    farPlane=9.56363, width=6.57489, height=3.02352, cameraPosition=(1.80681, 
    7.21224, 1.15134), cameraUpVector=(0.0426325, -0.335566, -0.941051), 
    cameraTarget=(0.137162, 0.0893397, 1.0238), viewOffsetX=-0.0820795, 
    viewOffsetY=0.00527426)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.203, 
    farPlane=9.66853, width=6.44496, height=2.96377, cameraPosition=(2.6096, 
    6.96128, 0.814455), cameraUpVector=(-0.104429, -0.342793, -0.933589), 
    cameraTarget=(0.148142, 0.0733129, 1.00635), viewOffsetX=-0.0804575, 
    viewOffsetY=0.00517003)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.33473, 
    farPlane=9.5368, width=6.60813, height=3.0388, cameraPosition=(-0.217629, 
    7.33842, -0.184952), cameraUpVector=(-0.0166625, -0.480763, -0.876693), 
    cameraTarget=(0.10974, 0.122689, 0.983708), viewOffsetX=-0.0824945, 
    viewOffsetY=0.00530092)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.79876, 
    farPlane=10.0728, width=5.94422, height=2.7335, cameraPosition=(5.21176, 
    3.18318, 5.24368), cameraUpVector=(0.392171, -0.238519, -0.888432), 
    cameraTarget=(0.109313, -0.0494045, 1.11389), viewOffsetX=-0.0742064, 
    viewOffsetY=0.00476835)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.29494, 
    farPlane=9.57661, width=6.55884, height=3.01614, cameraPosition=(-2.03989, 
    7.12541, 1.60952), cameraUpVector=(0.987767, -0.0535228, -0.146464), 
    cameraTarget=(-0.0230542, 0.10864, 1.12259), viewOffsetX=-0.0818792, 
    viewOffsetY=0.00526139)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.30253, 
    farPlane=9.56903, width=6.56824, height=3.02046, cameraPosition=(-0.304135, 
    7.32591, -0.242019), cameraUpVector=(0.945989, -0.313814, -0.0813997), 
    cameraTarget=(0.00440315, 0.137929, 1.09121), viewOffsetX=-0.0819966, 
    viewOffsetY=0.00526893)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.35959, 
    farPlane=9.51195, width=6.63893, height=3.05297, cameraPosition=(1.15135, 
    7.34657, 1.07951), cameraUpVector=(0.879369, -0.476141, -0.000417031), 
    cameraTarget=(0.0115043, 0.118895, 1.11443), viewOffsetX=-0.082879, 
    viewOffsetY=0.00532563)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.9526, 
    farPlane=9.91894, width=6.13479, height=2.82114, cameraPosition=(3.54512, 
    6.30598, 2.72357), cameraUpVector=(0.667126, -0.698269, -0.259544), 
    cameraTarget=(0.0585715, 0.0716507, 1.1371), viewOffsetX=-0.0765854, 
    viewOffsetY=0.00492122)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.23923, 
    farPlane=9.63234, width=6.48984, height=2.98441, cameraPosition=(-7.16643, 
    1.42016, 2.38913), cameraUpVector=(0.502029, 0.861165, -0.0797572), 
    cameraTarget=(-0.0962141, 0.0144514, 1.13378), viewOffsetX=-0.0810178, 
    viewOffsetY=0.00520603)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.33705, 
    farPlane=9.53454, width=6.611, height=3.04013, cameraPosition=(-7.33838, 
    1.11929, 1.4468), cameraUpVector=(0.463702, 0.875011, -0.139058), 
    cameraTarget=(-0.110993, 0.0247389, 1.12013), viewOffsetX=-0.0825304, 
    viewOffsetY=0.00530323)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.42469, 
    farPlane=9.44689, width=6.71956, height=3.09005, cameraPosition=(-7.4128, 
    0.581772, 1.12749), cameraUpVector=(0.406343, 0.913012, -0.035972), 
    cameraTarget=(-0.118379, 0.00627087, 1.11537), viewOffsetX=-0.0838857, 
    viewOffsetY=0.00539032)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.26038, 
    farPlane=9.61121, width=6.51603, height=2.99645, cameraPosition=(-7.26179, 
    1.59676, 0.854954), cameraUpVector=(0.529009, 0.848588, -0.00694388), 
    cameraTarget=(-0.120872, 0.0214287, 1.11088), viewOffsetX=-0.0813449, 
    viewOffsetY=0.00522705)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.3089, 
    farPlane=9.5627, width=6.57613, height=3.02409, cameraPosition=(-0.401634, 
    1.38102, -6.29629), cameraUpVector=(0.0552563, 0.863633, 0.501084), 
    cameraTarget=(-0.119685, 0.0191031, 0.887408), viewOffsetX=-0.0820952, 
    viewOffsetY=0.00527526)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.30013, 
    farPlane=9.57147, width=6.56526, height=3.01909, cameraPosition=(-0.491793, 
    1.27736, -6.30964), cameraUpVector=(0.0538162, 0.870848, 0.488598), 
    cameraTarget=(-0.121048, 0.0166174, 0.888476), viewOffsetX=-0.0819595, 
    viewOffsetY=0.00526654)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.38954, 
    farPlane=9.48206, width=6.67601, height=3.07002, cameraPosition=(
    -0.0655447, 0.880013, -6.38415), cameraUpVector=(-0.00458845, 0.896281, 
    0.443463), cameraTarget=(-0.114169, 0.00663821, 0.880469), 
    viewOffsetX=-0.083342, viewOffsetY=0.00535538)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.1764, 
    farPlane=9.6952, width=6.412, height=2.94861, cameraPosition=(2.26122, 
    0.376596, -6.07456), cameraUpVector=(-0.0907363, 0.92398, 0.371521), 
    cameraTarget=(-0.0712455, 0.00266302, 0.850723), viewOffsetX=-0.0800461, 
    viewOffsetY=0.00514359)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.09772, 
    farPlane=9.77388, width=6.31454, height=2.90379, cameraPosition=(-0.313451, 
    5.78096, -3.66761), cameraUpVector=(0.0119649, 0.332192, 0.943136), 
    cameraTarget=(-0.118132, 0.085611, 0.922008), viewOffsetX=-0.0788294, 
    viewOffsetY=0.00506541)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.12607, 
    farPlane=9.74552, width=6.34965, height=2.91994, cameraPosition=(-0.590908, 
    3.54108, -5.51275), cameraUpVector=(0.0406846, 0.669311, 0.741867), 
    cameraTarget=(-0.122472, 0.0487249, 0.900033), viewOffsetX=-0.0792677, 
    viewOffsetY=0.00509358)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.13361, 
    farPlane=9.73797, width=6.35899, height=2.92424, cameraPosition=(-7.05731, 
    1.76369, -0.545314), cameraUpVector=(0.553518, 0.83228, 0.0304678), 
    cameraTarget=(-0.137631, 0.0324834, 1.08584), viewOffsetX=-0.0793843, 
    viewOffsetY=0.00510107)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.44499, 
    farPlane=9.42659, width=6.74469, height=3.10161, cameraPosition=(-7.41716, 
    0.536588, 0.954768), cameraUpVector=(0.400852, 0.914024, 0.0622671), 
    cameraTarget=(-0.121842, -0.00508799, 1.11178), viewOffsetX=-0.0841993, 
    viewOffsetY=0.00541047)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.33476, 
    farPlane=9.53682, width=6.60814, height=3.03882, cameraPosition=(-7.39192, 
    0.774965, 0.748562), cameraUpVector=(0.428541, 0.901217, 0.0645007), 
    cameraTarget=(-0.124895, -5.56838e-006, 1.10848), viewOffsetX=-0.0824947, 
    viewOffsetY=0.00530093)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.20158, 
    farPlane=9.67, width=6.44317, height=2.96296, cameraPosition=(-7.16642, 
    1.93237, 0.538884), cameraUpVector=(0.564434, 0.822814, 0.0662658), 
    cameraTarget=(-0.126, 0.0214237, 1.10503), viewOffsetX=-0.0804353, 
    viewOffsetY=0.0051686)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.15325, 
    farPlane=9.71834, width=6.3833, height=2.93543, cameraPosition=(-1.89148, 
    7.09998, -0.14754), cameraUpVector=(0.970019, -0.0533368, 0.237104), 
    cameraTarget=(-0.0630804, 0.12388, 1.08968), viewOffsetX=-0.0796879, 
    viewOffsetY=0.00512057)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.32252, 
    farPlane=9.54906, width=6.59297, height=3.03185, cameraPosition=(0.584553, 
    7.35265, 0.0507395), cameraUpVector=(0.890591, -0.375775, 0.256206), 
    cameraTarget=(-0.0216549, 0.135505, 1.0924), viewOffsetX=-0.0823054, 
    viewOffsetY=0.00528877)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.4276, 
    farPlane=9.44398, width=6.72314, height=3.09171, cameraPosition=(-0.562375, 
    7.41374, 1.15641), cameraUpVector=(0.964, -0.262969, 0.0393975), 
    cameraTarget=(-0.0211126, 0.116818, 1.11522), viewOffsetX=-0.0839304, 
    viewOffsetY=0.00539319)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.26196, 
    farPlane=9.60963, width=6.51796, height=2.99735, cameraPosition=(1.3216, 
    7.29495, 1.58427), cameraUpVector=(0.867453, -0.497498, -0.00471315), 
    cameraTarget=(0.010734, 0.111094, 1.12211), viewOffsetX=-0.081369, 
    viewOffsetY=0.0052286)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.30995, 
    farPlane=9.56163, width=6.57741, height=3.02469, cameraPosition=(0.991821, 
    7.35315, 0.498239), cameraUpVector=(0.888748, -0.453211, 0.068759), 
    cameraTarget=(0.00499206, 0.128292, 1.10433), viewOffsetX=-0.0821112, 
    viewOffsetY=0.00527629)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.40831, 
    farPlane=9.46327, width=6.69925, height=3.08072, cameraPosition=(0.605267, 
    7.41195, 0.969958), cameraUpVector=(0.912121, -0.409785, 0.0105992), 
    cameraTarget=(0.00210974, 0.121164, 1.11262), viewOffsetX=-0.0836323, 
    viewOffsetY=0.00537403)
mdb.models['Model-1'].analyticalFields['shear_23'].setValues(
    expression='0.01*(X+1)/2')
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.35623, 
    farPlane=9.51535, width=6.63476, height=3.05105, cameraPosition=(-0.184936, 
    7.3652, 2.01187), cameraUpVector=(0.94865, -0.315903, 0.0163845), 
    cameraTarget=(-0.0167392, 0.103665, 1.12784), viewOffsetX=-0.082827, 
    viewOffsetY=0.00532228)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.30429, 
    farPlane=9.56729, width=6.57042, height=3.02146, cameraPosition=(0.986617, 
    7.34232, 1.64895), cameraUpVector=(0.889381, -0.457023, -0.0114301), 
    cameraTarget=(0.00596345, 0.110344, 1.12312), viewOffsetX=-0.0820238, 
    viewOffsetY=0.00527067)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.00298, 
    farPlane=9.86859, width=6.19718, height=2.84983, cameraPosition=(1.37484, 
    6.59751, -2.14432), cameraUpVector=(0.863763, -0.438002, 0.249133), 
    cameraTarget=(0.0114422, 0.157266, 1.05005), viewOffsetX=-0.0773644, 
    viewOffsetY=0.00497127)
mdb.models['Model-1'].analyticalFields['shear_23'].setValues(
    expression='0.01*(Z+1)/2')
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.21324, 
    farPlane=9.65833, width=6.45763, height=2.9696, cameraPosition=(-1.13348, 
    7.12904, 2.78778), cameraUpVector=(0.970725, -0.219032, 0.0985825), 
    cameraTarget=(-0.0425203, 0.0849525, 1.13544), viewOffsetX=-0.0806158, 
    viewOffsetY=0.0051802)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.45326, 
    farPlane=9.41831, width=6.75494, height=3.10632, cameraPosition=(0.28282, 
    7.42123, 1.3866), cameraUpVector=(0.927155, -0.372404, 0.0412224), 
    cameraTarget=(-0.00931075, 0.114902, 1.11866), viewOffsetX=-0.0843274, 
    viewOffsetY=0.0054187)
del mdb.models['Model-1'].boundaryConditions['BC-1']
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-3']
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.88414, 
    farPlane=9.98743, width=6.04997, height=2.78213, cameraPosition=(1.93898, 
    5.85183, 5.15941), cameraUpVector=(0.804203, -0.568895, -0.172091), 
    cameraTarget=(0.00317962, 0.0375611, 1.16109), viewOffsetX=-0.0755267, 
    viewOffsetY=0.00485318)
session.viewports['Viewport: 1'].view.setValues(width=5.7934, height=2.66415, 
    viewOffsetX=-0.0456926, viewOffsetY=0.020356)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.98699, 
    farPlane=9.80457, width=5.80673, height=2.67028, cameraPosition=(2.1975, 
    6.31215, -2.1675), cameraUpVector=(0.800394, -0.520496, 0.297411), 
    cameraTarget=(0.0177897, 0.108718, 1.04278), viewOffsetX=-0.0457978, 
    viewOffsetY=0.0204029)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.94067, 
    farPlane=9.89711, width=5.75281, height=2.64548, cameraPosition=(2.46021, 
    5.49409, 5.33683), cameraUpVector=(0.716333, -0.689937, -0.104181), 
    cameraTarget=(0.00173765, 0.0432194, 1.11979), viewOffsetX=-0.0453724, 
    viewOffsetY=0.0202134)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#180 ]', ), )
region = a.Set(faces=faces1, name='Set-15')
mdb.models['Model-1'].DisplacementBC(name='BC-1', 
    createStepName='Loading_step', region=region, u1=1.0, u2=UNSET, u3=UNSET, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(
    distributionType=FIELD, fieldName='shear_23')
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.21924, 
    farPlane=9.58291, width=6.07717, height=2.79464, cameraPosition=(-0.520492, 
    6.87046, -1.70316), cameraUpVector=(0.962777, -0.26208, 0.0661433), 
    cameraTarget=(-0.0172713, 0.103898, 1.03544), viewOffsetX=-0.0479306, 
    viewOffsetY=0.0213531)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.36468, 
    farPlane=9.44026, width=6.24651, height=2.87251, cameraPosition=(-0.12446, 
    7.2916, -0.27233), cameraUpVector=(0.947571, -0.312086, 0.0686347), 
    cameraTarget=(-0.0162764, 0.0964522, 1.05347), viewOffsetX=-0.0492662, 
    viewOffsetY=0.0219481)
mdb.models['Model-1'].analyticalFields['shear_23'].setValues(
    expression='0.01*(X+1)/2')
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u1=UNSET, u3=1.0)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.05513, 
    farPlane=9.74539, width=5.88607, height=2.70676, cameraPosition=(-0.4189, 
    4.98922, -4.44993), cameraUpVector=(0.936553, -0.343754, 0.068566), 
    cameraTarget=(-0.00314741, 0.111416, 0.988251), viewOffsetX=-0.0464234, 
    viewOffsetY=0.0206816)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.87984, 
    farPlane=9.93621, width=5.68196, height=2.6129, cameraPosition=(3.07594, 
    5.24864, -3.22777), cameraUpVector=(0.710396, -0.462116, 0.530835), 
    cameraTarget=(0.0157785, 0.113406, 0.991751), viewOffsetX=-0.0448136, 
    viewOffsetY=0.0199644)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.92958, 
    farPlane=9.88453, width=5.73988, height=2.63953, cameraPosition=(2.71338, 
    4.29391, -4.39154), cameraUpVector=(0.69331, -0.125905, 0.709556), 
    cameraTarget=(-0.00248565, 0.102235, 0.955749), viewOffsetX=-0.0452704, 
    viewOffsetY=0.0201679)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.92503, 
    farPlane=9.8895, width=5.73458, height=2.63709, cameraPosition=(2.82662, 
    3.98461, -4.56821), cameraUpVector=(0.691441, -0.118215, 0.712695), 
    cameraTarget=(0.000595517, 0.10059, 0.951528), viewOffsetX=-0.0452286, 
    viewOffsetY=0.0201493)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u2=1.0, u3=UNSET)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.95515, 
    farPlane=9.86466, width=5.76966, height=2.65323, cameraPosition=(2.85387, 
    -3.32839, -4.97397), cameraUpVector=(0.739484, 0.294525, 0.605325), 
    cameraTarget=(0.0228718, 0.0110188, 0.888905), viewOffsetX=-0.0455052, 
    viewOffsetY=0.0202725)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#50 ]', ), )
region = a.Set(faces=faces1, name='Set-16')
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=region)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u1=0.0, u3=0.0)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.1105, 
    farPlane=9.72643, width=5.95055, height=2.73641, cameraPosition=(1.25342, 
    -3.44356, 7.45071), cameraUpVector=(-0.394602, 0.902887, 0.17054), 
    cameraTarget=(0.1001, -0.0421539, 1.07578), viewOffsetX=-0.0469318, 
    viewOffsetY=0.0209081)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.90016, 
    farPlane=9.92237, width=5.70564, height=2.62378, cameraPosition=(-4.03821, 
    -2.7725, 6.56235), cameraUpVector=(-0.121925, 0.991572, -0.0438029), 
    cameraTarget=(0.0164209, -0.0550014, 1.11124), viewOffsetX=-0.0450002, 
    viewOffsetY=0.0200476)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.20545, 
    farPlane=9.62904, width=6.06112, height=2.78726, cameraPosition=(6.37452, 
    -3.78764, 1.20214), cameraUpVector=(-0.509203, -0.152177, 0.847086), 
    cameraTarget=(0.125757, 0.0142971, 1.00816), viewOffsetX=-0.0478038, 
    viewOffsetY=0.0212966)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.85556, 
    farPlane=9.97837, width=5.65372, height=2.59991, cameraPosition=(5.17028, 
    3.43879, -3.05715), cameraUpVector=(0.435975, -0.496085, 0.750883), 
    cameraTarget=(0.0451728, 0.114583, 0.970554), viewOffsetX=-0.0445906, 
    viewOffsetY=0.0198651)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.02085, 
    farPlane=9.8046, width=5.84618, height=2.68842, cameraPosition=(2.5873, 
    -2.84256, -5.33875), cameraUpVector=(0.744729, 0.0781828, 0.662772), 
    cameraTarget=(0.0229261, 0.0278142, 0.88414), viewOffsetX=-0.0461085, 
    viewOffsetY=0.0205413)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#1ae ]', ), )
region = a.Set(faces=faces1, name='Set-17')
mdb.models['Model-1'].DisplacementBC(name='BC-2', 
    createStepName='Loading_step', region=region, u1=0.0, u2=UNSET, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
#: The job input file "12_shear.inp" has been submitted for analysis.
#: Job 12_shear: Analysis Input File Processor completed successfully.
#: Job 12_shear: Abaqus/Standard completed successfully.
#: Job 12_shear completed successfully. 
o3 = session.openOdb(name='E:/Project/12_shear.odb')
#: Model: E:/Project/12_shear.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       20
#: Number of Node Sets:          19
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/12_shear.odb']
session.writeFieldReport(fileName='E:/Project/12shear/E_fibre.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/12_shear.odb']
session.writeFieldReport(fileName='E:/Project/12shear/E_matrix.csv', 
    append=OFF, sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
del mdb.models['Model-1'].boundaryConditions['BC-2']
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u2=0.0, u3=1.0)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.01674, 
    farPlane=9.81226, width=5.84139, height=2.68622, cameraPosition=(2.52927, 
    6.43258, -1.68425), cameraUpVector=(0.729604, -0.683576, -0.0200448), 
    cameraTarget=(0.0282784, 0.115524, 1.03223), viewOffsetX=-0.0460707, 
    viewOffsetY=0.0205245)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.22895, 
    farPlane=9.6008, width=6.08849, height=2.79985, cameraPosition=(1.21601, 
    7.07696, 2.85042), cameraUpVector=(0.837195, -0.399105, -0.373925), 
    cameraTarget=(0.00883551, 0.0764572, 1.09683), viewOffsetX=-0.0480195, 
    viewOffsetY=0.0213927)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#180 ]', ), )
region = a.Set(faces=faces1, name='Set-18')
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=region)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.89858, 
    farPlane=9.93378, width=5.70382, height=2.62295, cameraPosition=(4.19799, 
    5.49891, 3.67289), cameraUpVector=(0.577513, -0.665435, -0.472944), 
    cameraTarget=(0.0419253, 0.0514518, 1.10545), viewOffsetX=-0.0449856, 
    viewOffsetY=0.0200411)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.937, 
    farPlane=9.89993, width=5.74856, height=2.64353, cameraPosition=(2.4422, 
    -4.76723, 6.13305), cameraUpVector=(-0.287596, -0.501371, -0.816037), 
    cameraTarget=(-0.0221028, -0.0481989, 1.11335), viewOffsetX=-0.0453384, 
    viewOffsetY=0.0201983)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.90226, 
    farPlane=9.93328, width=5.70811, height=2.62493, cameraPosition=(-4.18488, 
    -5.13631, 4.33675), cameraUpVector=(-0.306842, 0.123902, -0.943661), 
    cameraTarget=(-0.0836676, -0.0195961, 1.0904), viewOffsetX=-0.0450194, 
    viewOffsetY=0.0200562)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.93888, 
    farPlane=9.89461, width=5.75075, height=2.64454, cameraPosition=(-3.92031, 
    5.59878, 3.88071), cameraUpVector=(0.289989, 0.23387, -0.928015), 
    cameraTarget=(4.03076e-006, 0.0874342, 1.08862), viewOffsetX=-0.0453557, 
    viewOffsetY=0.020206)
session.viewports['Viewport: 1'].view.setValues(width=6.11154, height=2.81045, 
    viewOffsetX=0.0346373, viewOffsetY=-0.0194815)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#7e ]', ), )
region = a.Set(faces=faces1, name='Set-19')
mdb.models['Model-1'].DisplacementBC(name='BC-2', 
    createStepName='Loading_step', region=region, u1=0.0, u2=0.0, u3=UNSET, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.20094, 
    farPlane=9.77135, width=6.44245, height=2.96262, cameraPosition=(3.84272, 
    6.40421, 1.51799), cameraUpVector=(0.569009, -0.686943, -0.452037), 
    cameraTarget=(0.147698, 0.106656, 1.04137), viewOffsetX=0.0365128, 
    viewOffsetY=-0.0205364)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.33491, 
    farPlane=9.59372, width=6.6084, height=3.03893, cameraPosition=(0.688933, 
    7.33674, 2.19313), cameraUpVector=(0.913002, -0.403051, -0.0630628), 
    cameraTarget=(0.101438, 0.131178, 1.06428), viewOffsetX=0.0374533, 
    viewOffsetY=-0.0210654)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.30656, 
    farPlane=9.61645, width=6.57328, height=3.02278, cameraPosition=(1.43328, 
    7.30711, 1.48585), cameraUpVector=(0.867377, -0.497136, -0.0226608), 
    cameraTarget=(0.116138, 0.122767, 1.05007), viewOffsetX=0.0372542, 
    viewOffsetY=-0.0209534)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.06601, 
    farPlane=9.91306, width=6.27531, height=2.88576, cameraPosition=(2.9499, 
    6.69022, 2.62549), cameraUpVector=(0.738595, -0.671679, -0.057656), 
    cameraTarget=(0.148157, 0.111333, 1.0737), viewOffsetX=0.0355654, 
    viewOffsetY=-0.0200036)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.997, 
    farPlane=10.0224, width=6.18983, height=2.84645, cameraPosition=(3.2335, 
    6.12613, 3.90151), cameraUpVector=(0.71443, -0.641052, -0.280434), 
    cameraTarget=(0.150206, 0.110093, 1.10147), viewOffsetX=0.0350809, 
    viewOffsetY=-0.0197311)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-1']
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.05911, 
    farPlane=9.78281, width=6.26677, height=2.88183, cameraPosition=(0.846022, 
    6.10218, -3.13804), cameraUpVector=(0.87561, -0.480149, 0.0525702), 
    cameraTarget=(0.0776984, 0.0663038, 0.926133), viewOffsetX=0.0355169, 
    viewOffsetY=-0.0199763)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#180 ]', ), )
region = a.Set(faces=faces1, name='Set-20')
mdb.models['Model-1'].DisplacementBC(name='BC-1', 
    createStepName='Loading_step', region=region, u1=0.0, u2=0.0, u3=1.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(
    distributionType=FIELD, fieldName='shear_23')
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.93237, 
    farPlane=9.90535, width=6.10978, height=2.80964, cameraPosition=(-3.3502, 
    6.21233, 3.28674), cameraUpVector=(0.972888, 0.188155, -0.13449), 
    cameraTarget=(0.0190516, 0.128294, 1.01249), viewOffsetX=0.0346271, 
    viewOffsetY=-0.0194759)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.95345, 
    farPlane=9.8311, width=6.13589, height=2.82165, cameraPosition=(-6.3595, 
    2.86706, 3.44666), cameraUpVector=(0.645729, 0.743011, -0.175977), 
    cameraTarget=(-0.0441992, 0.08511, 1.01411), viewOffsetX=0.0347751, 
    viewOffsetY=-0.0195591)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.10445, 
    farPlane=9.65988, width=6.32293, height=2.90766, cameraPosition=(-6.95357, 
    1.86854, 2.62987), cameraUpVector=(0.54583, 0.831898, -0.100075), 
    cameraTarget=(-0.0484244, 0.0743335, 1.00525), viewOffsetX=0.0358352, 
    viewOffsetY=-0.0201553)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.00665, 
    farPlane=9.75774, width=6.20178, height=2.85195, cameraPosition=(-5.8024, 
    4.51881, 0.357319), cameraUpVector=(0.839818, 0.54205, -0.0297929), 
    cameraTarget=(-0.0147617, 0.0858472, 0.983209), viewOffsetX=0.0351486, 
    viewOffsetY=-0.0197691)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u2=1.0, u3=0.0)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.04813, 
    farPlane=9.68357, width=6.25318, height=2.87558, cameraPosition=(0.380754, 
    4.35383, -4.92957), cameraUpVector=(0.819393, 0.137071, 0.556603), 
    cameraTarget=(0.0700315, 0.0397162, 0.972252), viewOffsetX=0.0354398, 
    viewOffsetY=-0.0199329)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.12336, 
    farPlane=9.65513, width=6.34637, height=2.91843, cameraPosition=(0.483426, 
    6.69177, -2.0973), cameraUpVector=(0.696468, -0.0784583, 0.713286), 
    cameraTarget=(0.0765355, 0.0709313, 0.991166), viewOffsetX=0.0359679, 
    viewOffsetY=-0.0202299)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.03033, 
    farPlane=9.81125, width=6.23113, height=2.86544, cameraPosition=(2.27451, 
    6.75125, 3.0779), cameraUpVector=(0.784136, -0.620438, -0.0136706), 
    cameraTarget=(0.0747209, 0.0854302, 1.01212), viewOffsetX=0.0353148, 
    viewOffsetY=-0.0198626)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.2835, 
    farPlane=9.54182, width=6.54473, height=3.00965, cameraPosition=(1.66059, 
    7.21368, 1.39333), cameraUpVector=(0.846856, -0.531651, -0.0135259), 
    cameraTarget=(0.0592646, 0.0857153, 0.984065), viewOffsetX=0.0370921, 
    viewOffsetY=-0.0208623)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.06256, 
    farPlane=9.7, width=6.27105, height=2.8838, cameraPosition=(-1.20356, 
    2.03678, -5.99211), cameraUpVector=(0.983086, 0.0149427, 0.182533), 
    cameraTarget=(0.0252231, -0.0230392, 0.920692), viewOffsetX=0.035541, 
    viewOffsetY=-0.0199899)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.27981, 
    farPlane=9.48329, width=6.54017, height=3.00756, cameraPosition=(0.544499, 
    1.1509, -6.27115), cameraUpVector=(0.917432, -0.0652667, 0.392504), 
    cameraTarget=(0.0372402, -0.036172, 0.931154), viewOffsetX=0.0370662, 
    viewOffsetY=-0.0208477)
del mdb.models['Model-1'].boundaryConditions['BC-1']
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.03306, 
    farPlane=9.73052, width=6.23452, height=2.867, cameraPosition=(5.96934, 
    -4.33103, 1.32128), cameraUpVector=(-0.028837, 0.581513, 0.813026), 
    cameraTarget=(0.0362041, -0.0571541, 1.05392), viewOffsetX=0.0353339, 
    viewOffsetY=-0.0198734)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.8375, 
    farPlane=9.92216, width=5.99227, height=2.7556, cameraPosition=(2.89965, 
    -5.74825, 4.60759), cameraUpVector=(-0.139479, 0.754626, 0.641159), 
    cameraTarget=(-0.0183811, -0.0478964, 1.06774), viewOffsetX=0.033961, 
    viewOffsetY=-0.0191012)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.25747, 
    farPlane=9.50735, width=6.51249, height=2.99483, cameraPosition=(1.54905, 
    -0.636625, 8.19016), cameraUpVector=(-0.1664, 0.961887, -0.216988), 
    cameraTarget=(-0.035335, 0.0203224, 1.07696), viewOffsetX=0.0369093, 
    viewOffsetY=-0.0207595)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.87423, 
    farPlane=9.89524, width=6.03776, height=2.77652, cameraPosition=(2.43048, 
    3.02449, 7.28355), cameraUpVector=(-0.0789986, 0.71116, -0.698578), 
    cameraTarget=(-0.0221205, 0.0654411, 1.05713), viewOffsetX=0.0342188, 
    viewOffsetY=-0.0192462)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.03239, 
    farPlane=9.7365, width=6.23367, height=2.86661, cameraPosition=(3.58442, 
    1.04516, 7.37126), cameraUpVector=(-0.0798059, 0.873664, -0.47994), 
    cameraTarget=(-0.00614452, 0.049538, 1.07395), viewOffsetX=0.0353291, 
    viewOffsetY=-0.0198707)
mdb.models['Model-1'].analyticalFields['shear_23'].setValues(
    expression='0.01*(Y+1)/2')
mdb.models['Model-1'].analyticalFields.changeKey(fromName='shear_23', 
    toName='shear_12')
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.10337, 
    farPlane=9.66405, width=6.32159, height=2.90704, cameraPosition=(0.999947, 
    2.42137, 7.90359), cameraUpVector=(-0.257171, 0.769346, -0.584781), 
    cameraTarget=(-0.0437325, 0.0431824, 1.06294), viewOffsetX=0.0358274, 
    viewOffsetY=-0.020151)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.03741, 
    farPlane=9.72361, width=6.23988, height=2.86947, cameraPosition=(-5.03646, 
    0.30283, 6.3868), cameraUpVector=(-0.117431, 0.78728, -0.60531), 
    cameraTarget=(-0.0856421, 0.00324592, 1.00729), viewOffsetX=0.0353643, 
    viewOffsetY=-0.0198906)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.05061, 
    farPlane=9.71435, width=6.25624, height=2.87699, cameraPosition=(-0.926303, 
    3.26761, 7.55508), cameraUpVector=(-0.303296, 0.620542, -0.723146), 
    cameraTarget=(-0.0648882, 0.0353972, 1.04738), viewOffsetX=0.035457, 
    viewOffsetY=-0.0199427)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.85726, 
    farPlane=9.90918, width=6.01674, height=2.76685, cameraPosition=(4.29252, 
    2.29854, 6.55036), cameraUpVector=(-0.176503, 0.765628, -0.618596), 
    cameraTarget=(-0.00166658, 0.061772, 1.06436), viewOffsetX=0.0340996, 
    viewOffsetY=-0.0191792)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.09981, 
    farPlane=9.66407, width=6.31719, height=2.90502, cameraPosition=(-2.24746, 
    1.458, 7.87894), cameraUpVector=(0.108441, 0.85917, -0.500068), 
    cameraTarget=(-0.0680314, 0.0408003, 1.03928), viewOffsetX=0.0358024, 
    viewOffsetY=-0.0201369)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.92356, 
    farPlane=9.84132, width=6.09888, height=2.80462, cameraPosition=(4.03262, 
    1.6278, 6.96593), cameraUpVector=(-0.17478, 0.837422, -0.517858), 
    cameraTarget=(-0.00662684, 0.0523444, 1.07172), viewOffsetX=0.0345651, 
    viewOffsetY=-0.019441)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#2e ]', ), )
region = a.Set(faces=faces1, name='Set-21')
mdb.models['Model-1'].DisplacementBC(name='BC-1', 
    createStepName='Loading_step', region=region, u1=1.0, u2=0.0, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=FIELD, fieldName='shear_12', localCsys=None)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.0301, 
    farPlane=9.73916, width=6.23085, height=2.86531, cameraPosition=(2.77822, 
    6.67411, -0.508011), cameraUpVector=(-0.647406, -0.257226, -0.717426), 
    cameraTarget=(-0.0291776, 0.0847996, 0.988241), viewOffsetX=0.035313, 
    viewOffsetY=-0.0198617)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.78932, 
    farPlane=9.97925, width=5.93259, height=2.72815, cameraPosition=(4.07043, 
    -4.93971, -2.68267), cameraUpVector=(-0.938227, -0.0231155, -0.345246), 
    cameraTarget=(0.0255646, -0.017047, 0.915338), viewOffsetX=0.0336226, 
    viewOffsetY=-0.018911)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.0395, 
    farPlane=9.72784, width=6.24249, height=2.87067, cameraPosition=(5.518, 
    -0.732741, 5.85148), cameraUpVector=(-0.477928, -0.873775, -0.0900165), 
    cameraTarget=(0.0747263, -0.0480119, 1.00988), viewOffsetX=0.0353789, 
    viewOffsetY=-0.0198989)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.78568, 
    farPlane=9.98162, width=5.92809, height=2.72608, cameraPosition=(4.34062, 
    4.7129, -2.67007), cameraUpVector=(0.439655, -0.249404, 0.862845), 
    cameraTarget=(0.0821242, 0.00210899, 0.964882), viewOffsetX=0.033597, 
    viewOffsetY=-0.0188967)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.20393, 
    farPlane=9.5635, width=6.44618, height=2.96433, cameraPosition=(2.69967, 
    -0.356444, -5.86349), cameraUpVector=(0.636246, 0.510603, 0.578339), 
    cameraTarget=(0.0720913, -0.0317267, 0.95777), viewOffsetX=0.0365332, 
    viewOffsetY=-0.0205482)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.95761, 
    farPlane=9.80989, width=6.14106, height=2.82402, cameraPosition=(6.5735, 
    -2.11829, 3.61253), cameraUpVector=(-0.177635, 0.943349, 0.280248), 
    cameraTarget=(0.0408441, -0.0102138, 1.07882), viewOffsetX=0.034804, 
    viewOffsetY=-0.0195756)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.98357, 
    farPlane=9.78394, width=6.17321, height=2.83881, viewOffsetX=0.0349862, 
    viewOffsetY=-0.0196781)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.98436, 
    farPlane=9.78315, width=6.1742, height=2.83926, viewOffsetX=0.0349918, 
    viewOffsetY=-0.0196812)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.07228, 
    farPlane=9.69519, width=6.28311, height=2.88934, cameraPosition=(4.33744, 
    0.333293, 6.96646), cameraUpVector=(-0.308301, 0.921735, -0.235278), 
    cameraTarget=(-0.00512326, 0.0257331, 1.0854), viewOffsetX=0.035609, 
    viewOffsetY=-0.0200284)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.9301, 
    farPlane=9.83735, width=6.10699, height=2.80836, cameraPosition=(3.23156, 
    2.02415, 7.3232), cameraUpVector=(-0.258204, 0.817589, -0.514664), 
    cameraTarget=(-0.0198209, 0.0464803, 1.07366), viewOffsetX=0.0346109, 
    viewOffsetY=-0.019467)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#1d0 ]', ), )
region = a.Set(faces=faces1, name='Set-22')
mdb.models['Model-1'].DisplacementBC(name='BC-2', 
    createStepName='Loading_step', region=region, u1=UNSET, u2=0.0, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['12_shear'].submit(consistencyChecking=OFF)
#: The job input file "12_shear.inp" has been submitted for analysis.
#: Job 12_shear: Analysis Input File Processor completed successfully.
#: Job 12_shear: Abaqus/Standard completed successfully.
#: Job 12_shear completed successfully. 
o3 = session.openOdb(name='E:/Project/12_shear.odb')
#: Model: E:/Project/12_shear.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       25
#: Number of Node Sets:          24
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/12_shear.odb']
session.writeFieldReport(fileName='E:/Project/12shear/E_fibre.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/12_shear.odb']
session.writeFieldReport(fileName='E:/Project/12shear/E_matrix.csv', 
    append=OFF, sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
del mdb.models['Model-1'].boundaryConditions['BC-1']
del mdb.models['Model-1'].boundaryConditions['BC-2']
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.83864, 
    farPlane=9.9288, width=5.9937, height=2.75626, cameraPosition=(-5.41804, 
    2.76554, 5.18563), cameraUpVector=(-0.275481, 0.0342719, -0.960695), 
    cameraTarget=(-0.085774, -0.0168438, 1.01853), viewOffsetX=0.0339688, 
    viewOffsetY=-0.0191058)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.34913, 
    farPlane=9.41836, width=6.62606, height=3.04705, cameraPosition=(-0.491822, 
    -1.06305, 8.29049), cameraUpVector=(-0.909727, 0.194491, -0.366837), 
    cameraTarget=(-0.0406809, -0.055325, 1.05721), viewOffsetX=0.0375526, 
    viewOffsetY=-0.0211215)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.81267, 
    farPlane=9.95482, width=5.96154, height=2.74146, cameraPosition=(4.57014, 
    -2.12793, 6.39528), cameraUpVector=(-0.868444, 0.292867, 0.400043), 
    cameraTarget=(0.00324786, -0.0612478, 1.06501), viewOffsetX=0.0337865, 
    viewOffsetY=-0.0190032)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.26641, 
    farPlane=9.50106, width=6.52359, height=2.99992, cameraPosition=(7.21779, 
    0.968713, 2.21989), cameraUpVector=(-0.49529, 0.0898848, 0.864065), 
    cameraTarget=(0.0656708, -0.0374816, 1.04762), viewOffsetX=0.0369719, 
    viewOffsetY=-0.0207948)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.98014, 
    farPlane=9.78731, width=6.16898, height=2.83685, cameraPosition=(6.77566, 
    1.97264, 3.17303), cameraUpVector=(-0.544643, -0.246173, 0.801725), 
    cameraTarget=(0.0697477, -0.0356476, 1.04301), viewOffsetX=0.0349622, 
    viewOffsetY=-0.0196644)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.40536, 
    farPlane=9.3621, width=6.69571, height=3.07907, cameraPosition=(7.35307, 
    0.662522, 1.12876), cameraUpVector=(-0.331973, -0.169379, 0.927957), 
    cameraTarget=(0.0714373, -0.0488383, 1.02232), viewOffsetX=0.0379474, 
    viewOffsetY=-0.0213434)
mdb.models['Model-1'].analyticalFields['shear_12'].setValues(
    expression='0.01*(Z)/2')
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.8584, 
    farPlane=9.90903, width=6.01818, height=2.76752, cameraPosition=(5.71091, 
    4.36453, 2.69089), cameraUpVector=(-0.393914, -0.368423, 0.842079), 
    cameraTarget=(0.0792903, -0.00597866, 1.04074), viewOffsetX=0.0341076, 
    viewOffsetY=-0.0191837)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.09739, 
    farPlane=9.67011, width=6.31423, height=2.90365, cameraPosition=(6.4587, 
    -3.53828, 1.53762), cameraUpVector=(-0.464875, -0.0262701, 0.884986), 
    cameraTarget=(0.0303697, -0.0817517, 1.01947), viewOffsetX=0.0357854, 
    viewOffsetY=-0.0201274)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.945, 
    farPlane=9.82251, width=6.12546, height=2.81685, cameraPosition=(5.02379, 
    -5.2871, 2.15391), cameraUpVector=(-0.523898, 0.145676, 0.839231), 
    cameraTarget=(0.00258829, -0.0863451, 1.02287), viewOffsetX=0.0347155, 
    viewOffsetY=-0.0195257)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#50 ]', ), )
region = a.Set(faces=faces1, name='Set-23')
mdb.models['Model-1'].DisplacementBC(name='BC-1', 
    createStepName='Loading_step', region=region, u1=1.0, u2=0.0, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=FIELD, fieldName='shear_12', localCsys=None)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.15951, 
    farPlane=9.60802, width=6.39118, height=2.93904, cameraPosition=(1.54856, 
    -7.10057, -0.306666), cameraUpVector=(-0.387308, 0.0894284, 0.917603), 
    cameraTarget=(-0.0427858, -0.0783173, 0.995303), viewOffsetX=0.0362214, 
    viewOffsetY=-0.0203727)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.94738, 
    farPlane=9.82016, width=6.12841, height=2.8182, cameraPosition=(-2.05439, 
    -6.53594, -1.75401), cameraUpVector=(-0.00910741, -0.0456768, 0.998915), 
    cameraTarget=(-0.0707632, -0.054543, 1.00212), viewOffsetX=0.0347322, 
    viewOffsetY=-0.0195351)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.2259, 
    farPlane=9.54163, width=6.47342, height=2.97685, cameraPosition=(0.0698367, 
    -6.95089, 3.49074), cameraUpVector=(0.0489185, 0.628727, 0.776086), 
    cameraTarget=(-0.0489909, -0.052946, 1.05275), viewOffsetX=0.0366875, 
    viewOffsetY=-0.0206349)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.09094, 
    farPlane=9.67659, width=6.30625, height=2.89997, cameraPosition=(-0.241704, 
    -6.49773, 4.49923), cameraUpVector=(0.0966671, 0.733357, 0.672936), 
    cameraTarget=(-0.0506248, -0.0417982, 1.06063), viewOffsetX=0.0357401, 
    viewOffsetY=-0.020102)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.06712, 
    farPlane=9.70041, width=6.27675, height=2.88642, cameraPosition=(-1.25245, 
    -6.8514, 3.45219), cameraUpVector=(0.144655, 0.608142, 0.780537), 
    cameraTarget=(-0.0589976, -0.0432318, 1.05135), viewOffsetX=0.0355729, 
    viewOffsetY=-0.020008)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.81002, 
    farPlane=9.95753, width=5.95827, height=2.73996, cameraPosition=(-3.52486, 
    -5.4965, 4.44781), cameraUpVector=(0.300527, 0.673612, 0.675226), 
    cameraTarget=(-0.0720726, -0.0117014, 1.05153), viewOffsetX=0.0337679, 
    viewOffsetY=-0.0189928)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.15842, 
    farPlane=9.60911, width=6.38984, height=2.93843, cameraPosition=(-0.750189, 
    -6.87214, 3.59506), cameraUpVector=(0.332269, 0.594412, 0.732305), 
    cameraTarget=(-0.0460298, -0.0432877, 1.06319), viewOffsetX=0.0362138, 
    viewOffsetY=-0.0203685)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.91999, 
    farPlane=9.84752, width=6.09449, height=2.80261, cameraPosition=(2.05296, 
    -6.40283, 4.05164), cameraUpVector=(-0.170099, 0.66998, 0.722629), 
    cameraTarget=(-0.0328311, -0.0611734, 1.05626), viewOffsetX=0.0345399, 
    viewOffsetY=-0.019427)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.89523, 
    farPlane=9.8723, width=6.06382, height=2.7885, cameraPosition=(-4.65046, 
    -5.3993, 2.93501), cameraUpVector=(0.29727, 0.488681, 0.820257), 
    cameraTarget=(-0.079096, -0.00920558, 1.04055), viewOffsetX=0.034366, 
    viewOffsetY=-0.0193292)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.07634, 
    farPlane=9.69118, width=6.28816, height=2.89167, cameraPosition=(-1.27173, 
    -6.73502, 3.74694), cameraUpVector=(0.0580374, 0.656978, 0.751673), 
    cameraTarget=(-0.0620616, -0.0421093, 1.04858), viewOffsetX=0.0356374, 
    viewOffsetY=-0.0200443)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#2e ]', ), )
region = a.Set(faces=faces1, name='Set-24')
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=region)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.09346, 
    farPlane=9.67407, width=6.30937, height=2.90142, cameraPosition=(1.02603, 
    -6.89163, 3.44462), cameraUpVector=(-0.125516, 0.611563, 0.781176), 
    cameraTarget=(-0.0437329, -0.0615064, 1.04785), viewOffsetX=0.0357576, 
    viewOffsetY=-0.0201119)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.76754, 
    farPlane=9.99997, width=5.90565, height=2.71577, cameraPosition=(4.45364, 
    4.50545, 4.79334), cameraUpVector=(-0.698702, 0.542828, -0.465997), 
    cameraTarget=(-0.00545439, 0.0596166, 1.06634), viewOffsetX=0.0334696, 
    viewOffsetY=-0.018825)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.86832, 
    farPlane=9.8992, width=6.03049, height=2.77318, cameraPosition=(2.72844, 
    5.51656, -3.08002), cameraUpVector=(-0.960347, 0.18685, 0.206933), 
    cameraTarget=(0.0130524, 0.088167, 1.00638), viewOffsetX=0.0341771, 
    viewOffsetY=-0.0192229)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.86242, 
    farPlane=9.90508, width=6.0232, height=2.76982, cameraPosition=(5.67149, 
    3.38195, 4.30453), cameraUpVector=(-0.828294, 0.545835, 0.126465), 
    cameraTarget=(0.0237864, 0.0267622, 1.08187), viewOffsetX=0.0341357, 
    viewOffsetY=-0.0191996)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.90369, 
    farPlane=9.86381, width=6.07432, height=2.79333, cameraPosition=(2.1351, 
    -5.72908, 5.14033), cameraUpVector=(-0.245498, 0.764278, 0.596331), 
    cameraTarget=(-0.033617, -0.0533292, 1.06333), viewOffsetX=0.0344254, 
    viewOffsetY=-0.0193626)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.34365, 
    farPlane=9.42385, width=6.61932, height=3.04395, cameraPosition=(
    -0.0406869, -7.22426, 2.527), cameraUpVector=(0.0335207, 0.517435, 
    0.855065), cameraTarget=(-0.0506623, -0.059088, 1.04389), 
    viewOffsetX=0.0375141, viewOffsetY=-0.0210998)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.13797, 
    farPlane=9.62953, width=6.36454, height=2.92679, cameraPosition=(-0.301692, 
    -6.88025, 3.66354), cameraUpVector=(0.051414, 0.646239, 0.761402), 
    cameraTarget=(-0.0527899, -0.0494629, 1.05245), viewOffsetX=0.0360702, 
    viewOffsetY=-0.0202877)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#1d0 ]', ), )
region = a.Set(faces=faces1, name='Set-25')
mdb.models['Model-1'].DisplacementBC(name='BC-2', 
    createStepName='Loading_step', region=region, u1=UNSET, u2=0.0, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['13_shear'].submit(consistencyChecking=OFF)
#: The job input file "13_shear.inp" has been submitted for analysis.
o3 = session.openOdb(name='E:/Project/12_shear.odb')
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
#: Job 13_shear: Analysis Input File Processor completed successfully.
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
odb = session.odbs['E:/Project/12_shear.odb']
session.viewports['Viewport: 1'].setValues(displayedObject=odb)
#: Job 13_shear: Abaqus/Standard completed successfully.
#: Job 13_shear completed successfully. 
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='E', outputPosition=INTEGRATION_POINT, refinement=(INVARIANT, 
    'Max. Principal'), )
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
o3 = session.openOdb(name='E:/Project/13_shear.odb')
#: Model: E:/Project/13_shear.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       28
#: Number of Node Sets:          27
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
o3 = session.openOdb(name='E:/Project/13_shear.odb')
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.32903, 
    farPlane=9.34251, width=5.438, height=2.50072, cameraPosition=(1.49731, 
    2.3804, 7.7761), cameraUpVector=(-0.158505, 0.775136, -0.611589), 
    cameraTarget=(0.0419602, -0.0839148, 1.04196))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.12544, 
    farPlane=9.53947, width=5.23024, height=2.40518, cameraPosition=(3.57003, 
    3.19287, 6.55298), cameraUpVector=(-0.30931, 0.68994, -0.654454), 
    cameraTarget=(0.0472436, -0.0818438, 1.03884))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.20807, 
    farPlane=9.43721, width=5.31458, height=2.44396, cameraPosition=(0.631199, 
    3.01911, 7.64212), cameraUpVector=(-0.0271253, 0.712048, -0.701607), 
    cameraTarget=(0.0410764, -0.0822085, 1.04113))
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='E', outputPosition=INTEGRATION_POINT, refinement=(INVARIANT, 
    'Max. Principal'), )
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.84221, 
    farPlane=9.76956, width=4.94125, height=2.27228, cameraPosition=(3.85997, 
    4.84139, 4.8791), cameraUpVector=(-0.0869682, 0.31042, -0.946613), 
    cameraTarget=(0.0435342, -0.0808214, 1.03903))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.32345, 
    farPlane=9.42752, width=5.43234, height=2.49811, cameraPosition=(0.865744, 
    -2.21092, 7.9832), cameraUpVector=(0.116509, 0.991421, -0.0592538), 
    cameraTarget=(0.0481175, -0.0700262, 1.03428))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.29313, 
    farPlane=9.53587, width=5.4014, height=2.48388, cameraPosition=(-0.425482, 
    -6.91871, 3.63224), cameraUpVector=(0.229708, 0.629364, 0.742385), 
    cameraTarget=(0.0378898, -0.107316, 0.999816))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.0462, 
    farPlane=9.82164, width=5.14942, height=2.368, cameraPosition=(3.22416, 
    -6.11655, 3.73108), cameraUpVector=(-0.463866, 0.496172, 0.733922), 
    cameraTarget=(0.0858494, -0.0967749, 1.00111))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.05974, 
    farPlane=9.8271, width=5.16324, height=2.37435, cameraPosition=(4.72457, 
    -5.26468, 3.31713), cameraUpVector=(-0.414968, 0.454432, 0.788221), 
    cameraTarget=(0.109435, -0.0833842, 0.994603))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.06499, 
    farPlane=9.80621, width=5.16859, height=2.37681, cameraPosition=(3.51739, 
    -5.96221, 3.71495), cameraUpVector=(-0.324371, 0.573942, 0.751913), 
    cameraTarget=(0.0889426, -0.0952252, 1.00136))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.13281, 
    farPlane=9.74272, width=5.2378, height=2.40864, cameraPosition=(3.23048, 
    -6.35817, 3.11209), cameraUpVector=(-0.2436, 0.540297, 0.805443), 
    cameraTarget=(0.0843685, -0.101538, 0.991749))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.05526, 
    farPlane=9.82818, width=5.15866, height=2.37225, cameraPosition=(4.34989, 
    -5.58215, 3.3022), cameraUpVector=(-0.328346, 0.521053, 0.787841), 
    cameraTarget=(0.102536, -0.0889438, 0.994834))
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.90233, 
    farPlane=9.98111, width=6.02299, height=2.76973, viewOffsetX=0.0229265, 
    viewOffsetY=0.0508917)
odb = session.odbs['E:/Project/13_shear.odb']
session.writeFieldReport(fileName='E:/Project/13shear/E_matrix.csv', 
    append=OFF, sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/13_shear.odb']
session.writeFieldReport(fileName='E:/Project/13shear/E_fibre.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.03098, 
    farPlane=9.73652, width=6.23201, height=2.86585, cameraPosition=(6.87469, 
    -1.75659, -1.0436), cameraUpVector=(0.0327576, 0.7639, 0.644503), 
    cameraTarget=(0.0761272, -0.0280032, 1.03748), viewOffsetX=0.0353191, 
    viewOffsetY=-0.0198653)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.18934, 
    farPlane=9.57816, width=6.42817, height=2.95606, cameraPosition=(7.10191, 
    1.87983, 1.7432), cameraUpVector=(-0.513162, 0.330942, 0.791923), 
    cameraTarget=(0.0677144, -0.0143381, 1.05651), viewOffsetX=0.0364308, 
    viewOffsetY=-0.0204906)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.06388, 
    farPlane=9.70361, width=6.27276, height=2.88459, cameraPosition=(6.30975, 
    0.247984, 4.82738), cameraUpVector=(-0.770996, -0.0206309, 0.636506), 
    cameraTarget=(0.0440956, -0.0493018, 1.06008), viewOffsetX=0.03555, 
    viewOffsetY=-0.0199952)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.28045, 
    farPlane=9.48705, width=6.54103, height=3.00796, cameraPosition=(7.20219, 
    0.133567, 2.62293), cameraUpVector=(-0.528803, -0.0177342, 0.848559), 
    cameraTarget=(0.0601845, -0.0504296, 1.04265), viewOffsetX=0.0370704, 
    viewOffsetY=-0.0208503)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.37673, 
    farPlane=9.39077, width=6.66031, height=3.06281, cameraPosition=(7.36755, 
    0.208465, 1.44619), cameraUpVector=(-0.385501, -0.0245453, 0.922381), 
    cameraTarget=(0.0667695, -0.0498402, 1.03228), viewOffsetX=0.0377463, 
    viewOffsetY=-0.0212305)
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-1']
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.82229, 
    farPlane=9.94522, width=5.97352, height=2.74697, cameraPosition=(5.64927, 
    4.2727, 3.08643), cameraUpVector=(-0.540028, -0.248293, 0.80419), 
    cameraTarget=(0.0716322, -0.00462397, 1.05321), viewOffsetX=0.0338539, 
    viewOffsetY=-0.0190412)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.95746, 
    farPlane=9.81006, width=6.14096, height=2.82397, cameraPosition=(5.68121, 
    -4.50584, 2.39452), cameraUpVector=(-0.587939, 0.0487227, 0.807436), 
    cameraTarget=(0.0141303, -0.0854539, 1.02195), viewOffsetX=0.0348028, 
    viewOffsetY=-0.0195749)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.93611, 
    farPlane=9.83141, width=6.11451, height=2.81181, cameraPosition=(6.31463, 
    3.07544, 3.27828), cameraUpVector=(-0.529737, -0.293242, 0.795856), 
    cameraTarget=(0.0727437, -0.022679, 1.04666), viewOffsetX=0.0346529, 
    viewOffsetY=-0.0194906)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#50 ]', ), )
region = a.Set(faces=faces1, name='Set-26')
mdb.models['Model-1'].DisplacementBC(name='BC-1', 
    createStepName='Loading_step', region=region, u1=0.0, u2=1.0, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(
    distributionType=FIELD, fieldName='shear_12')
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.95394, 
    farPlane=9.81357, width=6.13659, height=2.82197, cameraPosition=(-6.14018, 
    3.7257, 2.71485), cameraUpVector=(-0.23367, -0.955528, -0.179904), 
    cameraTarget=(-0.0643225, -0.00144643, 1.06199), viewOffsetX=0.034778, 
    viewOffsetY=-0.019561)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.08559, 
    farPlane=9.68192, width=6.29968, height=2.89696, cameraPosition=(-5.26468, 
    -0.143019, -4.17552), cameraUpVector=(0.0420548, -0.890984, 0.452083), 
    cameraTarget=(-0.0882149, -0.0129674, 0.994279), viewOffsetX=0.0357022, 
    viewOffsetY=-0.0200808)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.13988, 
    farPlane=9.62763, width=6.36693, height=2.92789, cameraPosition=(-0.764547, 
    6.98378, -1.27282), cameraUpVector=(-0.904872, -0.407649, 0.122591), 
    cameraTarget=(-0.0363287, 0.0763945, 1.02877), viewOffsetX=0.0360833, 
    viewOffsetY=-0.0202952)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.90987, 
    farPlane=9.85765, width=6.08201, height=2.79687, cameraPosition=(1.46821, 
    5.76243, 5.37747), cameraUpVector=(-0.756592, 0.234202, -0.610507), 
    cameraTarget=(-0.0413111, 0.0497419, 1.06167), viewOffsetX=0.0344686, 
    viewOffsetY=-0.019387)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.01914, 
    farPlane=9.74839, width=6.21737, height=2.85912, cameraPosition=(2.3365, 
    1.99061, 7.71579), cameraUpVector=(-0.390204, 0.79608, -0.462598), 
    cameraTarget=(-0.0336456, 0.0339732, 1.07549), viewOffsetX=0.0352357, 
    viewOffsetY=-0.0198185)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.02025, 
    farPlane=9.74729, width=6.21876, height=2.85975, cameraPosition=(6.65933, 
    -1.60866, 3.75485), cameraUpVector=(-0.38534, 0.775134, 0.500679), 
    cameraTarget=(0.0362337, -0.0253652, 1.07765), viewOffsetX=0.0352435, 
    viewOffsetY=-0.0198229)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.0111, 
    farPlane=9.75644, width=6.20743, height=2.85454, cameraPosition=(5.88649, 
    0.727048, 5.39821), cameraUpVector=(-0.821395, 0.272773, 0.500904), 
    cameraTarget=(0.0302311, -0.0322863, 1.07765), viewOffsetX=0.0351793, 
    viewOffsetY=-0.0197868)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.30355, 
    farPlane=9.46399, width=6.5697, height=3.02114, cameraPosition=(7.25195, 
    -0.36394, 2.34179), cameraUpVector=(-0.487039, 0.152741, 0.859921), 
    cameraTarget=(0.0571394, -0.049813, 1.04732), viewOffsetX=0.0372324, 
    viewOffsetY=-0.0209416)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#1ae ]', ), )
region = a.Set(faces=faces1, name='Set-27')
mdb.models['Model-1'].DisplacementBC(name='BC-2', 
    createStepName='Loading_step', region=region, u1=0.0, u2=UNSET, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
#: The job input file "23_shear.inp" has been submitted for analysis.
#: Job 23_shear: Analysis Input File Processor completed successfully.
#: Job 23_shear: Abaqus/Standard completed successfully.
#: Job 23_shear completed successfully. 
o3 = session.openOdb(name='E:/Project/23_shear.odb')
#: Model: E:/Project/23_shear.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       30
#: Number of Node Sets:          29
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='E', outputPosition=INTEGRATION_POINT, refinement=(INVARIANT, 
    'Max. Principal'), )
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='E', outputPosition=INTEGRATION_POINT, refinement=(COMPONENT, 
    'E11'), )
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='E', outputPosition=INTEGRATION_POINT, refinement=(INVARIANT, 
    'Max. Principal'), )
odb = session.odbs['E:/Project/23_shear.odb']
session.writeFieldReport(fileName='E:/Project/23shear/E_matrix.csv', 
    append=OFF, sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/23_shear.odb']
session.writeFieldReport(fileName='E:/Project/23shear/E_fibre.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-1']
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.98396, 
    farPlane=9.78359, width=6.17382, height=2.83909, cameraPosition=(2.72346, 
    1.49527, -5.69855), cameraUpVector=(0.742966, 0.0166954, 0.669121), 
    cameraTarget=(0.0595316, -0.033865, 0.942598), viewOffsetX=0.0349888, 
    viewOffsetY=-0.0196797)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.19837, 
    farPlane=9.56918, width=6.43943, height=2.96123, cameraPosition=(1.23023, 
    1.21803, -6.1782), cameraUpVector=(0.86775, 0.0432971, 0.495112), 
    cameraTarget=(0.0462737, -0.0362358, 0.932683), viewOffsetX=0.036494, 
    viewOffsetY=-0.0205263)
session.viewports['Viewport: 1'].view.setValues(width=6.81185, height=3.13249, 
    viewOffsetX=0.0391505, viewOffsetY=-0.0527563)
a = mdb.models['Model-1'].rootAssembly
region = a.sets['zzminus']
mdb.models['Model-1'].DisplacementBC(name='BC-1', 
    createStepName='Loading_step', region=region, u1=UNSET, u2=UNSET, u3=-1.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
a = mdb.models['Model-1'].rootAssembly
region = a.sets['zzplus']
mdb.models['Model-1'].DisplacementBC(name='BC-2', 
    createStepName='Loading_step', region=region, u1=UNSET, u2=UNSET, u3=1.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.07251, 
    farPlane=9.68533, width=6.68459, height=3.07397, cameraPosition=(1.01229, 
    7.02441, -1.02129), cameraUpVector=(0.883006, -0.405417, 0.236512), 
    cameraTarget=(0.0441781, 0.0399227, 0.933021), viewOffsetX=0.0384191, 
    viewOffsetY=-0.0517707)
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(u3=0.01)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u3=-0.01)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u1=0.0, u2=0.0)
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(u1=0.0, u2=0.0)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.90617, 
    farPlane=9.77157, width=6.46539, height=2.97317, cameraPosition=(6.64797, 
    -2.54642, -0.786174), cameraUpVector=(-0.394381, -0.589608, 0.704859), 
    cameraTarget=(-0.0183311, -0.105321, 0.986134), viewOffsetX=0.0371593, 
    viewOffsetY=-0.050073)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.09779, 
    farPlane=9.61106, width=6.71791, height=3.08929, cameraPosition=(-1.01326, 
    -7.05047, -0.833241), cameraUpVector=(-0.425484, 0.169013, 0.889043), 
    cameraTarget=(-0.0963235, -0.030134, 1.01438), viewOffsetX=0.0386106, 
    viewOffsetY=-0.0520287)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.7766, 
    farPlane=9.94432, width=6.29464, height=2.89465, cameraPosition=(-5.36336, 
    -4.58467, -1.0977), cameraUpVector=(-0.171535, 0.291928, 0.940933), 
    cameraTarget=(-0.0962817, 0.0306743, 1.02269), viewOffsetX=0.0361779, 
    viewOffsetY=-0.0487506)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.06867, 
    farPlane=9.65891, width=6.67954, height=3.07165, cameraPosition=(-7.01327, 
    -1.49029, -0.681448), cameraUpVector=(0.0535325, 0.268855, 0.961692), 
    cameraTarget=(-0.0726423, 0.0682638, 1.03265), viewOffsetX=0.0383901, 
    viewOffsetY=-0.0517315)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.89065, 
    farPlane=9.85011, width=6.44495, height=2.96377, cameraPosition=(-5.87142, 
    4.29208, -0.198186), cameraUpVector=(0.24124, 0.0426266, 0.969529), 
    cameraTarget=(-0.00522503, 0.0981866, 1.04223), viewOffsetX=0.0370418, 
    viewOffsetY=-0.0499146)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.21827, 
    farPlane=9.53271, width=6.87669, height=3.16231, cameraPosition=(-1.25341, 
    7.24783, 0.448681), cameraUpVector=(0.120077, -0.236662, 0.964143), 
    cameraTarget=(0.0563387, 0.0744675, 1.05448), viewOffsetX=0.0395232, 
    viewOffsetY=-0.0532583)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.26785, 
    farPlane=9.4868, width=6.94203, height=3.19235, cameraPosition=(0.511505, 
    7.33244, 0.362112), cameraUpVector=(0.0417212, -0.245693, 0.968449), 
    cameraTarget=(0.0712153, 0.0615563, 1.05494), viewOffsetX=0.0398987, 
    viewOffsetY=-0.0537643)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.76906, 
    farPlane=9.98815, width=6.28472, height=2.89009, cameraPosition=(5.60085, 
    4.32024, 3.10234), cameraUpVector=(0.095695, -0.892236, 0.441313), 
    cameraTarget=(0.110557, -0.0389584, 1.00623), viewOffsetX=0.0361209, 
    viewOffsetY=-0.0486736)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.23337, 
    farPlane=9.53591, width=6.8966, height=3.17147, cameraPosition=(7.18747, 
    1.62143, 0.495411), cameraUpVector=(-0.0986754, -0.976645, 0.190859), 
    cameraTarget=(0.0828142, -0.0704585, 0.943775), viewOffsetX=0.0396376, 
    viewOffsetY=-0.0534124)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.02528, 
    farPlane=9.7387, width=6.62237, height=3.04536, cameraPosition=(3.40845, 
    6.53932, 0.648168), cameraUpVector=(0.689506, -0.720875, 0.0701392), 
    cameraTarget=(0.0999086, 0.0192981, 0.935318), viewOffsetX=0.0380615, 
    viewOffsetY=-0.0512886)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#7e ]', ), )
region = a.Set(faces=faces1, name='Set-28')
mdb.models['Model-1'].DisplacementBC(name='BC-3', 
    createStepName='Loading_step', region=region, u1=0.0, u2=0.0, u3=UNSET, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['ZZ_displacement'].submit(consistencyChecking=OFF)
#: The job input file "ZZ_displacement.inp" has been submitted for analysis.
#: Job ZZ_displacement: Analysis Input File Processor completed successfully.
#: Job ZZ_displacement: Abaqus/Standard completed successfully.
#: Job ZZ_displacement completed successfully. 
o3 = session.openOdb(name='E:/Project/ZZ_displacement.odb')
#: Model: E:/Project/ZZ_displacement.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       31
#: Number of Node Sets:          30
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='E', outputPosition=INTEGRATION_POINT, refinement=(INVARIANT, 
    'Max. Principal'), )
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/ZZ_displacement.odb']
session.writeFieldReport(fileName='E:/Project/ZZ/E_fibre.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/ZZ_displacement.odb']
session.writeFieldReport(fileName='E:/Project/ZZ/E_matrix.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.27111, 
    farPlane=9.47668, width=5.37892, height=2.47354, cameraPosition=(6.73245, 
    0.125142, 4.00595), cameraUpVector=(-0.308211, 0.933506, -0.183229), 
    cameraTarget=(0.0535459, -0.0528172, 1.02265))
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.92642, 
    farPlane=9.77679, width=5.02718, height=2.31179, cameraPosition=(5.74658, 
    3.12388, 4.3566), cameraUpVector=(-0.631113, 0.706264, -0.320761), 
    cameraTarget=(0.0459486, -0.0297083, 1.02535))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.13394, 
    farPlane=9.59344, width=5.23894, height=2.40917, cameraPosition=(6.41491, 
    1.41159, 4.32905), cameraUpVector=(-0.454596, 0.858101, -0.238758), 
    cameraTarget=(0.049088, -0.0377515, 1.02522))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.25275, 
    farPlane=9.50333, width=5.36018, height=2.46492, cameraPosition=(6.86692, 
    -0.822988, 3.57015), cameraUpVector=(-0.19517, 0.97052, -0.141417), 
    cameraTarget=(0.0519495, -0.0518978, 1.02042))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.30724, 
    farPlane=9.462, width=5.41579, height=2.49049, cameraPosition=(7.09555, 
    -1.88278, 1.80185), cameraUpVector=(-0.0929507, 0.995023, 0.0359013), 
    cameraTarget=(0.0538388, -0.0606556, 1.00581))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.50764, 
    farPlane=9.23853, width=5.62029, height=2.58453, cameraPosition=(7.34156, 
    0.0503453, 0.319378), cameraUpVector=(-0.337626, 0.936063, 0.0989702), 
    cameraTarget=(0.0560891, -0.0429726, 0.992249))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.08597, 
    farPlane=9.64415, width=5.19, height=2.38666, cameraPosition=(6.67655, 
    1.52008, -1.71275), cameraUpVector=(-0.504279, 0.849555, 0.154786), 
    cameraTarget=(0.0510371, -0.0318071, 0.976811))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.20861, 
    farPlane=9.52667, width=5.31515, height=2.44422, cameraPosition=(6.85273, 
    1.0696, -1.48596), cameraUpVector=(-0.44487, 0.881694, 0.15718), 
    cameraTarget=(0.0521851, -0.0347424, 0.978289))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.30226, 
    farPlane=9.44717, width=5.41071, height=2.48816, cameraPosition=(6.79077, 
    -0.125048, -1.87368), cameraUpVector=(-0.306523, 0.946191, 0.103763), 
    cameraTarget=(0.0517598, -0.0429424, 0.975628))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.31608, 
    farPlane=9.42968, width=5.42481, height=2.49465, cameraPosition=(6.8823, 
    -0.0585136, 3.64416), cameraUpVector=(-0.327005, 0.942234, -0.0725408), 
    cameraTarget=(0.0524753, -0.0424224, 1.01876))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.33923, 
    farPlane=9.40106, width=5.44843, height=2.50551, cameraPosition=(7.16542, 
    0.448904, 2.66617), cameraUpVector=(-0.397737, 0.916836, -0.034876), 
    cameraTarget=(0.0546184, -0.0385813, 1.01136))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.26399, 
    farPlane=9.47889, width=5.37165, height=2.4702, cameraPosition=(6.79907, 
    0.178239, 3.84268), cameraUpVector=(-0.3535, 0.930974, -0.0912457), 
    cameraTarget=(0.0519803, -0.0405304, 1.01983))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.29592, 
    farPlane=9.44554, width=5.40423, height=2.48518, cameraPosition=(6.97497, 
    0.323265, 3.36111), cameraUpVector=(-0.371727, 0.924364, -0.0858522), 
    cameraTarget=(0.0532776, -0.0394608, 1.01628))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.0975, 
    farPlane=9.6402, width=5.20175, height=2.39207, cameraPosition=(5.46545, 
    0.720489, -3.88994), cameraUpVector=(-0.409901, 0.893405, 0.183869), 
    cameraTarget=(0.0422896, -0.0365693, 0.963498))
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.4656, 
    farPlane=9.27927, width=5.57737, height=2.5648, cameraPosition=(7.26274, 
    0.0721998, -0.265687), cameraUpVector=(-0.345557, 0.937391, 0.0434483), 
    cameraTarget=(0.0549164, -0.0411238, 0.98896))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
del mdb.models['Model-1'].boundaryConditions['BC-3']
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-1']
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.79098, 
    farPlane=9.96316, width=6.31362, height=2.90338, cameraPosition=(-5.04442, 
    4.97716, 3.05265), cameraUpVector=(0.751796, 0.472594, -0.459844), 
    cameraTarget=(-0.0276414, 0.0919387, 0.929901), viewOffsetX=0.0362869, 
    viewOffsetY=-0.0488974)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.13186, 
    farPlane=9.62391, width=6.76283, height=3.10995, cameraPosition=(-7.06324, 
    1.79054, 2.16089), cameraUpVector=(0.56515, 0.815806, 0.122744), 
    cameraTarget=(-0.0461579, 0.0997621, 0.960353), viewOffsetX=0.0388687, 
    viewOffsetY=-0.0523764)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.75823, 
    farPlane=10.0118, width=6.27046, height=2.88353, cameraPosition=(-4.0944, 
    -2.66432, -4.53949), cameraUpVector=(-0.186854, 0.977392, 0.098945), 
    cameraTarget=(-0.0238963, 0.0589371, 0.896902), viewOffsetX=0.0360388, 
    viewOffsetY=-0.0485631)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.88646, 
    farPlane=9.89686, width=6.43945, height=2.96124, cameraPosition=(2.25078, 
    3.9126, -4.85417), cameraUpVector=(-0.275148, 0.631568, 0.724855), 
    cameraTarget=(0.0614224, 0.104415, 0.997659), viewOffsetX=0.03701, 
    viewOffsetY=-0.0498719)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.86531, 
    farPlane=9.91783, width=6.41158, height=2.94842, cameraPosition=(3.1499, 
    2.77313, -5.08542), cameraUpVector=(-0.232581, 0.752872, 0.615703), 
    cameraTarget=(0.075191, 0.0944061, 0.989949), viewOffsetX=0.0368498, 
    viewOffsetY=-0.0496561)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.33089, 
    farPlane=9.45409, width=7.02513, height=3.23057, cameraPosition=(7.30004, 
    0.209825, 2.15038), cameraUpVector=(-0.382851, 0.905067, 0.185148), 
    cameraTarget=(0.0626128, 0.0613074, 1.08402), viewOffsetX=0.0403761, 
    viewOffsetY=-0.0544079)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.01812, 
    farPlane=9.76807, width=6.61296, height=3.04103, cameraPosition=(3.31955, 
    0.349593, 7.59736), cameraUpVector=(-0.198739, 0.929115, -0.311846), 
    cameraTarget=(-0.0191868, 0.0771082, 1.09213), viewOffsetX=0.0380072, 
    viewOffsetY=-0.0512157)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.16686, 
    farPlane=9.6199, width=6.80897, height=3.13117, cameraPosition=(0.896399, 
    1.45034, 8.19472), cameraUpVector=(-0.271848, 0.840801, -0.468137), 
    cameraTarget=(-0.0625264, 0.0754842, 1.07225), viewOffsetX=0.0391337, 
    viewOffsetY=-0.0527337)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.3554, 
    farPlane=9.43108, width=7.05743, height=3.24543, cameraPosition=(-0.357892, 
    -0.214042, 8.38208), cameraUpVector=(-0.121998, 0.945284, -0.30258), 
    cameraTarget=(-0.0696296, 0.0646993, 1.07602), viewOffsetX=0.0405617, 
    viewOffsetY=-0.054658)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.28354, 
    farPlane=9.50317, width=6.96273, height=3.20188, cameraPosition=(-0.014772, 
    0.899577, 8.33902), cameraUpVector=(-0.117319, 0.892457, -0.435611), 
    cameraTarget=(-0.0647032, 0.0771472, 1.06851), viewOffsetX=0.0400174, 
    viewOffsetY=-0.0539246)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.76046, 
    farPlane=10.0281, width=6.27342, height=2.88489, cameraPosition=(-4.97754, 
    4.96793, -1.28646), cameraUpVector=(0.634183, -0.191211, -0.749166), 
    cameraTarget=(-0.0525035, 0.0141481, 0.891433), viewOffsetX=0.0360556, 
    viewOffsetY=-0.0485859)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.97281, 
    farPlane=9.81542, width=6.55325, height=3.01357, cameraPosition=(-6.51897, 
    1.92181, -1.914), cameraUpVector=(0.667267, -0.100991, -0.73794), 
    cameraTarget=(-0.0522614, -0.0340024, 0.895922), viewOffsetX=0.0376639, 
    viewOffsetY=-0.0507531)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.19511, 
    farPlane=9.59312, width=6.8462, height=3.14828, cameraPosition=(-7.22409, 
    1.26185, 0.0502493), cameraUpVector=(0.437256, -0.0685675, -0.896719), 
    cameraTarget=(-0.0762808, -0.0417977, 0.915431), viewOffsetX=0.0393476, 
    viewOffsetY=-0.0530219)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.9386, 
    farPlane=9.84955, width=6.50817, height=2.99283, cameraPosition=(-1.27171, 
    -3.34571, 7.47072), cameraUpVector=(-0.86851, 0.329712, -0.370109), 
    cameraTarget=(-0.0935636, -0.0686737, 1.03548), viewOffsetX=0.0374048, 
    viewOffsetY=-0.050404)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.15414, 
    farPlane=9.63386, width=6.79221, height=3.12345, cameraPosition=(6.94452, 
    -2.52563, 0.726274), cameraUpVector=(-0.326957, -0.0536268, 0.943516), 
    cameraTarget=(0.0527338, -0.0904123, 1.06147), viewOffsetX=0.0390373, 
    viewOffsetY=-0.0526038)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.04746, 
    farPlane=9.74054, width=6.65163, height=3.0588, cameraPosition=(7.00027, 
    -2.0676, -0.183746), cameraUpVector=(-0.208294, -0.10442, 0.972476), 
    cameraTarget=(0.0649774, -0.0887797, 1.05128), viewOffsetX=0.0382293, 
    viewOffsetY=-0.051515)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.35916, 
    farPlane=9.42901, width=7.0624, height=3.24769, cameraPosition=(7.37215, 
    0.0295635, 0.423933), cameraUpVector=(-0.249607, 0.0846727, 0.964638), 
    cameraTarget=(0.0843818, -0.0476184, 1.07334), viewOffsetX=0.0405901, 
    viewOffsetY=-0.0546963)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.11433, 
    farPlane=9.674, width=6.73976, height=3.09932, cameraPosition=(7.21635, 
    1.1629, 2.12005), cameraUpVector=(-0.459229, -0.0618943, 0.886159), 
    cameraTarget=(0.0736885, -0.0428352, 1.08665), viewOffsetX=0.0387358, 
    viewOffsetY=-0.0521975)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.96967, 
    farPlane=9.81876, width=6.54913, height=3.01168, cameraPosition=(6.81713, 
    1.74809, 3.27029), cameraUpVector=(-0.592802, -0.0958607, 0.799623), 
    cameraTarget=(0.0615865, -0.0364133, 1.0983), viewOffsetX=0.0376402, 
    viewOffsetY=-0.0507211)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.95267, 
    farPlane=9.83546, width=6.52674, height=3.00138, cameraPosition=(6.58956, 
    -2.79342, 2.85891), cameraUpVector=(-0.562302, 0.0781658, 0.823229), 
    cameraTarget=(0.0287552, -0.0839078, 1.08303), viewOffsetX=0.0375115, 
    viewOffsetY=-0.0505476)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.14199, 
    farPlane=9.64633, width=6.77623, height=3.11611, cameraPosition=(7.1114, 
    1.7979, 1.93699), cameraUpVector=(-0.42605, -0.113766, 0.897518), 
    cameraTarget=(0.0797257, -0.0371041, 1.08396), viewOffsetX=0.0389454, 
    viewOffsetY=-0.0524799)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#50 ]', ), )
region = a.Set(faces=faces1, name='Set-29')
mdb.models['Model-1'].DisplacementBC(name='BC-1', 
    createStepName='Loading_step', region=region, u1=0.0, u2=1.0, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=FIELD, fieldName='shear_12', localCsys=None)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.78749, 
    farPlane=10.0013, width=6.30906, height=2.90128, cameraPosition=(-3.24934, 
    5.85116, 4.14506), cameraUpVector=(0.401097, -0.571242, 0.716104), 
    cameraTarget=(0.0332541, 0.0655025, 1.0971), viewOffsetX=0.0362604, 
    viewOffsetY=-0.0488618)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.91181, 
    farPlane=9.87683, width=6.47289, height=2.97662, cameraPosition=(1.72969, 
    4.11024, -4.89906), cameraUpVector=(-0.125573, 0.602119, 0.788469), 
    cameraTarget=(0.0680633, 0.100543, 0.991666), viewOffsetX=0.037202, 
    viewOffsetY=-0.0501306)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.80948, 
    farPlane=9.97924, width=6.33805, height=2.91461, cameraPosition=(2.76877, 
    5.37062, 5.26332), cameraUpVector=(-0.224579, -0.786548, 0.575244), 
    cameraTarget=(0.0720915, -0.00674182, 1.09783), viewOffsetX=0.036427, 
    viewOffsetY=-0.0490862)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.99699, 
    farPlane=9.79179, width=6.58515, height=3.02824, cameraPosition=(6.30037, 
    3.74744, 0.0263775), cameraUpVector=(0.0339292, -0.466079, 0.884093), 
    cameraTarget=(0.113963, -0.0283417, 1.03203), viewOffsetX=0.0378472, 
    viewOffsetY=-0.0509999)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.74418, 
    farPlane=10.0447, width=6.25199, height=2.87503, cameraPosition=(4.43158, 
    -3.82148, -3.52146), cameraUpVector=(0.346114, -0.078427, 0.934909), 
    cameraTarget=(0.0587807, -0.105073, 1.01797), viewOffsetX=0.0359324, 
    viewOffsetY=-0.0484197)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.8007, 
    farPlane=9.98813, width=6.32647, height=2.90929, cameraPosition=(5.24359, 
    -3.40963, -2.9453), cameraUpVector=(0.25447, -0.0252701, 0.96675), 
    cameraTarget=(0.0671618, -0.0979519, 1.02671), viewOffsetX=0.0363605, 
    viewOffsetY=-0.0489965)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.79837, 
    farPlane=9.99046, width=6.32341, height=2.90788, viewOffsetX=0.0363428, 
    viewOffsetY=-0.0489727)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.79829, 
    farPlane=9.99054, width=6.32331, height=2.90783, viewOffsetX=0.0363422, 
    viewOffsetY=-0.0489719)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.79828, 
    farPlane=9.99055, width=6.3233, height=2.90783, viewOffsetX=0.0363422, 
    viewOffsetY=-0.0489718)
session.viewports['Viewport: 1'].view.setValues(nearPlane=4.99738, 
    farPlane=9.79146, width=6.58569, height=3.02849, cameraPosition=(6.68229, 
    2.44074, 3.01891), cameraUpVector=(-0.564972, -0.110293, 0.817706), 
    cameraTarget=(0.0669314, -0.0264899, 1.09817), viewOffsetX=0.0378502, 
    viewOffsetY=-0.0510039)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Part-1-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#1ae ]', ), )
region = a.Set(faces=faces1, name='Set-30')
mdb.models['Model-1'].DisplacementBC(name='BC-2', 
    createStepName='Loading_step', region=region, u1=0.0, u2=UNSET, u3=0.0, 
    ur1=UNSET, ur2=UNSET, ur3=UNSET, amplitude=UNSET, fixed=OFF, 
    distributionType=UNIFORM, fieldName='', localCsys=None)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
#: The job input file "23_shear.inp" has been submitted for analysis.
#: Job 23_shear: Analysis Input File Processor completed successfully.
#: Job 23_shear: Abaqus/Standard completed successfully.
#: Job 23_shear completed successfully. 
o3 = session.openOdb(name='E:/Project/23_shear.odb')
#: Model: E:/Project/23_shear.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       33
#: Number of Node Sets:          32
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/23_shear.odb']
session.writeFieldReport(fileName='E:/Project/23shear/E_matrix.csv', 
    append=OFF, sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/23_shear.odb']
session.writeFieldReport(fileName='E:/Project/23shear/E_fibre.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u1=UNSET, u3=UNSET)
mdb.save()
#: The model database has been saved to "E:\Project\RVE.cae".
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['23_shear'].submit(consistencyChecking=OFF)
#: The job input file "23_shear.inp" has been submitted for analysis.
#: Job 23_shear: Analysis Input File Processor completed successfully.
#: Job 23_shear: Abaqus/Standard completed successfully.
#: Job 23_shear completed successfully. 
o3 = session.openOdb(name='E:/Project/23_shear.odb')
#: Model: E:/Project/23_shear.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       33
#: Number of Node Sets:          32
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
dg1= session.displayGroups['FIBRE']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/23_shear.odb']
session.writeFieldReport(fileName='E:/Project/23shear/E_fibre.csv', append=OFF, 
    sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
dg1= session.displayGroups['MATRIX']
session.viewports['Viewport: 1'].odbDisplay.setValues(visibleDisplayGroups=(
    dg1, ))
odb = session.odbs['E:/Project/23_shear.odb']
session.writeFieldReport(fileName='E:/Project/23shear/E_matrix.csv', 
    append=OFF, sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
#* The file designated for reporting cannot be opened. Please check that it is 
#* not being used by another process.
odb = session.odbs['E:/Project/23_shear.odb']
session.writeFieldReport(fileName='E:/Project/23shear/E_matrix.csv', 
    append=OFF, sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
#* The file designated for reporting cannot be opened. Please check that it is 
#* not being used by another process.
odb = session.odbs['E:/Project/23_shear.odb']
session.writeFieldReport(fileName='E:/Project/23shear/E_matrix.csv', 
    append=OFF, sortItem='Element Label', odb=odb, step=0, frame=1, 
    outputPosition=ELEMENT_CENTROID, variable=(('E', INTEGRATION_POINT), ))
