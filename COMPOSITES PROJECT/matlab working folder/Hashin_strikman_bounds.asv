
clear all;
format long e
% Volume fraction
Vf = 0.5;
Vm = 1.0 - Vf;
% Now calculate the stiffness matrix of fibre
% Fibre is transversely isotropic with following properties in MPa
E1 = 80*1000;
E2 = 80*1000;
E3 = E2;
%
G12 = 33.33*1000;
G13 = 33.33*1000;
%
G23 = 33.33*1000;
%
nu_12 = 0.2;
nu_13 = nu_12;
%
nu_23 = E2/(2.0 * G23) - 1.0;
%
nu_21 = nu_12 * E2/E1;
nu_31 = nu_13 * E3/E1;
nu_32 = nu_23 * E3/E2;
% Initialization
s = zeros(6,6);
Cf = zeros(6,6);
Cm = zeros(6,6);
%
s(1,1)=1.0/E1;
s(2,2)=1.0/E2;
s(3,3)=1.0/E3;
%
s(1,2)=-nu_21/E2;
s(1,3)=-nu_31/E3;
%
s(2,1)=-nu_21/E2;
s(2,3)=-nu_32/E3;
%
s(3,1)=-nu_13/E1;
s(3,2)=-nu_23/E2;
% Following order is according order in Abaqus
s(4,4)=1.0/G12;
s(5,5)=1.0/G13;
s(6,6)=1.0/G23;
Cf = inv(s)
% Calculate the stiffness matrix of matrix
% Matrix is isotropic with following properties
E0 = 3.35*1000;
XNU = 0.35;
%
XX = E0 * (1.0 - XNU)/((1.0 - 2.0 * XNU)*(1.0 + XNU));
YY = E0 * XNU/((1.0 - 2.0 * XNU)*(1.0 + XNU));
ZZ = E0 /(2.0 * (1.0 + XNU));
%
for I = 1:3
    for J = 1:3
        Cm(I,J) = YY;
    end
    Cm(I,I) = XX;
    Cm(I+3,I+3) = ZZ;
end
Kf = E1/(3*(1-nu_21));
Km = E0/(3*(1-XNU));
Gm = ZZ;
G1 = G12;
G2 = G1

K_lower = Km + Vf/((1/(Kf-Km))+(Vm/(Kf+Gm)))
plot(t,K_lower,'r','Linewidth',0.2);
title("K-* vs Vf")
xlabel("Volume Fraction")
ylabel("BULK MODULUS")
K_upper = Kf + Vm/((1/(Km-Kf))+(Vf/(Kf+Gm)))
K_upper= double(subs(K_upper,Vf,t));
plot(t,K_upper,'r','Linewidth',0.2);
title("K+* vs Vf")
xlabel("Volume Fraction")
ylabel("BULK MODULUS")
K_upper = Kf + Vm/((1/(Km-Kf))+(Vf/(Kf+Gm)))


% G23_lower = Gm + (Vf/((1/(G23 - Gm))+(Km+2*Gm*Vm)/(2*Gm*Km+Gm))
% gam = G2/G1
% b1 = K1/(K1+2*G1)
% b2 = K2/(K2+2*G2)
% alpha = (b1-gam*b2)/(1+gam*b2)
% rho = (gam + b1)/(gam-1)
% G23_upper = Gm + (1+(1+b1*Vf)/(rho-Vf*(1+(3*(b1^2)*(Vm^2))/(alpha*(Vf^3) + 1))))
% 
% E1_lower = Em_1*Vm + Ef_1*Vf + (4*nu_12 - (XNU^2)*Vf*Vm)/((Vm/Kf)+(Vf/Km) + (1/Gm))
% 
% E1_upper = Em_1*Vm + Ef_1*Vf + (4*nu_12 - (XNU^2)*Vf*Vm)/((Vm/Kf)+(Vf/Km) + (1/G_23))
% 
% nu12_lower = XNU*Vm+nu_12*Vf+ (4*XNU - (nu_12)*(1/(Kf-Km))*Vf*Vm)/((Vm/Kf)+(Vf/Km) + (1/G_23))
% nu12_upper = XNU*Vm+nu_12*Vf+ (4*nu_12 - (XNU)*(1/(Km-Kf))*Vf*Vm)/((Vm/Kf)+(Vf/Km) + (1/Gm))
% 
% G12_lower = Gm*((Gm*Vm+G12*(1+Vf))/(G12*Vm+Gm*(1+Vf)))
% G12_upper = G12*((G12*Vf+Gm*(1+Vm))/(Gm*Vf+G12*(1+Vm)))


